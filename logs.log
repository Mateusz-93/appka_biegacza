2025-06-09 17:26:30,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 17:26:30,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 17:26:30,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 17:26:30,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 17:29:22,189:INFO:PyCaret RegressionExperiment
2025-06-09 17:29:22,189:INFO:Logging name: reg-default-name
2025-06-09 17:29:22,189:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-09 17:29:22,189:INFO:version 3.3.2
2025-06-09 17:29:22,189:INFO:Initializing setup()
2025-06-09 17:29:22,189:INFO:self.USI: ebb3
2025-06-09 17:29:22,189:INFO:self._variable_keys: {'y_train', '_available_plots', 'seed', 'exp_id', 'fold_generator', 'X_train', '_ml_usecase', 'n_jobs_param', 'pipeline', 'log_plots_param', 'gpu_param', 'target_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'fold_groups_param', 'memory', 'transform_target_param', 'data', 'html_param', 'exp_name_log', 'logging_param', 'idx', 'y_test', 'USI', 'y', 'X', 'X_test'}
2025-06-09 17:29:22,189:INFO:Checking environment
2025-06-09 17:29:22,189:INFO:python_version: 3.11.10
2025-06-09 17:29:22,189:INFO:python_build: ('main', 'Oct  3 2024 07:22:26')
2025-06-09 17:29:22,189:INFO:machine: AMD64
2025-06-09 17:29:22,189:INFO:platform: Windows-10-10.0.19045-SP0
2025-06-09 17:29:22,189:INFO:Memory: svmem(total=17066795008, available=5534965760, percent=67.6, used=11531829248, free=5534965760)
2025-06-09 17:29:22,189:INFO:Physical Core: 4
2025-06-09 17:29:22,189:INFO:Logical Core: 4
2025-06-09 17:29:22,189:INFO:Checking libraries
2025-06-09 17:29:22,189:INFO:System:
2025-06-09 17:29:22,189:INFO:    python: 3.11.10 | packaged by Anaconda, Inc. | (main, Oct  3 2024, 07:22:26) [MSC v.1929 64 bit (AMD64)]
2025-06-09 17:29:22,189:INFO:executable: c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\python.exe
2025-06-09 17:29:22,189:INFO:   machine: Windows-10-10.0.19045-SP0
2025-06-09 17:29:22,189:INFO:PyCaret required dependencies:
2025-06-09 17:29:22,571:INFO:                 pip: 24.2
2025-06-09 17:29:22,571:INFO:          setuptools: 75.1.0
2025-06-09 17:29:22,571:INFO:             pycaret: 3.3.2
2025-06-09 17:29:22,571:INFO:             IPython: 8.27.0
2025-06-09 17:29:22,571:INFO:          ipywidgets: 8.1.5
2025-06-09 17:29:22,571:INFO:                tqdm: 4.66.6
2025-06-09 17:29:22,571:INFO:               numpy: 1.26.4
2025-06-09 17:29:22,571:INFO:              pandas: 2.1.4
2025-06-09 17:29:22,571:INFO:              jinja2: 3.1.4
2025-06-09 17:29:22,571:INFO:               scipy: 1.11.4
2025-06-09 17:29:22,571:INFO:              joblib: 1.2.0
2025-06-09 17:29:22,571:INFO:             sklearn: 1.4.2
2025-06-09 17:29:22,571:INFO:                pyod: 2.0.2
2025-06-09 17:29:22,571:INFO:            imblearn: 0.13.0
2025-06-09 17:29:22,571:INFO:   category_encoders: 2.6.3
2025-06-09 17:29:22,571:INFO:            lightgbm: 4.5.0
2025-06-09 17:29:22,571:INFO:               numba: 0.60.0
2025-06-09 17:29:22,571:INFO:            requests: 2.32.3
2025-06-09 17:29:22,571:INFO:          matplotlib: 3.7.5
2025-06-09 17:29:22,571:INFO:          scikitplot: 0.3.7
2025-06-09 17:29:22,571:INFO:         yellowbrick: 1.5
2025-06-09 17:29:22,571:INFO:              plotly: 5.24.1
2025-06-09 17:29:22,571:INFO:    plotly-resampler: Not installed
2025-06-09 17:29:22,571:INFO:             kaleido: 0.2.1
2025-06-09 17:29:22,571:INFO:           schemdraw: 0.15
2025-06-09 17:29:22,571:INFO:         statsmodels: 0.14.4
2025-06-09 17:29:22,571:INFO:              sktime: 0.26.0
2025-06-09 17:29:22,571:INFO:               tbats: 1.1.3
2025-06-09 17:29:22,571:INFO:            pmdarima: 2.0.4
2025-06-09 17:29:22,571:INFO:              psutil: 5.9.0
2025-06-09 17:29:22,571:INFO:          markupsafe: 2.1.3
2025-06-09 17:29:22,571:INFO:             pickle5: Not installed
2025-06-09 17:29:22,571:INFO:         cloudpickle: 3.0.0
2025-06-09 17:29:22,571:INFO:         deprecation: 2.1.0
2025-06-09 17:29:22,571:INFO:              xxhash: 3.5.0
2025-06-09 17:29:22,571:INFO:           wurlitzer: 3.1.1
2025-06-09 17:29:22,571:INFO:PyCaret optional dependencies:
2025-06-09 17:29:24,097:INFO:                shap: Not installed
2025-06-09 17:29:24,104:INFO:           interpret: Not installed
2025-06-09 17:29:24,104:INFO:                umap: 0.5.3
2025-06-09 17:29:24,104:INFO:     ydata_profiling: 4.12.1
2025-06-09 17:29:24,105:INFO:  explainerdashboard: Not installed
2025-06-09 17:29:24,105:INFO:             autoviz: Not installed
2025-06-09 17:29:24,105:INFO:           fairlearn: Not installed
2025-06-09 17:29:24,105:INFO:          deepchecks: Not installed
2025-06-09 17:29:24,105:INFO:             xgboost: 2.1.1
2025-06-09 17:29:24,106:INFO:            catboost: 1.2.3
2025-06-09 17:29:24,106:INFO:              kmodes: 0.12.2
2025-06-09 17:29:24,106:INFO:             mlxtend: 0.23.4
2025-06-09 17:29:24,106:INFO:       statsforecast: Not installed
2025-06-09 17:29:24,106:INFO:        tune_sklearn: Not installed
2025-06-09 17:29:24,107:INFO:                 ray: Not installed
2025-06-09 17:29:24,107:INFO:            hyperopt: Not installed
2025-06-09 17:29:24,107:INFO:              optuna: Not installed
2025-06-09 17:29:24,107:INFO:               skopt: Not installed
2025-06-09 17:29:24,107:INFO:              mlflow: 2.16.0
2025-06-09 17:29:24,108:INFO:              gradio: Not installed
2025-06-09 17:29:24,108:INFO:             fastapi: 0.112.2
2025-06-09 17:29:24,108:INFO:             uvicorn: 0.32.1
2025-06-09 17:29:24,108:INFO:              m2cgen: Not installed
2025-06-09 17:29:24,108:INFO:           evidently: 0.6.0
2025-06-09 17:29:24,109:INFO:               fugue: Not installed
2025-06-09 17:29:24,109:INFO:           streamlit: 1.41.1
2025-06-09 17:29:24,109:INFO:             prophet: Not installed
2025-06-09 17:29:24,109:INFO:None
2025-06-09 17:29:24,110:INFO:Set up data.
2025-06-09 17:29:24,129:INFO:Set up folding strategy.
2025-06-09 17:29:24,129:INFO:Set up train/test split.
2025-06-09 17:29:24,193:INFO:Set up index.
2025-06-09 17:29:24,193:INFO:Assigning column types.
2025-06-09 17:29:24,193:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-09 17:29:24,193:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-09 17:29:24,209:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 17:29:24,215:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 17:29:24,288:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:24,388:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 17:29:24,388:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:24,404:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:25,060:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,073:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,077:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,160:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,225:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,225:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:25,239:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:25,240:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-09 17:29:25,243:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,254:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,338:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,404:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:25,407:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:25,410:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,422:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,506:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,571:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,571:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:25,575:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:25,576:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-09 17:29:25,588:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,667:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,738:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,738:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:25,738:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:25,753:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,838:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,901:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 17:29:25,901:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:25,901:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:25,901:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-09 17:29:26,000:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:26,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 17:29:26,071:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:26,071:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:26,171:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:26,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 17:29:26,239:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:26,239:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:26,239:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-09 17:29:26,339:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:26,402:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:26,402:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:26,516:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 17:29:26,584:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:26,584:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:26,584:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-09 17:29:26,750:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:26,750:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:26,920:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:26,920:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:26,920:INFO:Preparing preprocessing pipeline...
2025-06-09 17:29:26,920:INFO:Set up simple imputation.
2025-06-09 17:29:26,946:INFO:Set up encoding of ordinal features.
2025-06-09 17:29:26,946:INFO:Set up encoding of categorical features.
2025-06-09 17:29:26,946:INFO:Set up column name cleaning.
2025-06-09 17:29:27,036:INFO:Finished creating preprocessing pipeline.
2025-06-09 17:29:27,067:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Mateusz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-06-09 17:29:27,067:INFO:Creating final display dataframe.
2025-06-09 17:29:27,271:INFO:Setup _display_container:                     Description             Value
0                    Session id                33
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (17927, 4)
4        Transformed data shape        (17927, 4)
5   Transformed train set shape        (12548, 4)
6    Transformed test set shape         (5379, 4)
7              Numeric features                 2
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              ebb3
2025-06-09 17:29:27,467:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:27,484:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:27,651:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 17:29:27,655:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 17:29:27,657:INFO:setup() successfully completed in 5.5s...............
2025-06-09 21:20:18,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 21:20:18,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 21:20:18,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 21:20:18,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 21:20:52,979:INFO:PyCaret RegressionExperiment
2025-06-09 21:20:52,979:INFO:Logging name: reg-default-name
2025-06-09 21:20:52,979:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-09 21:20:52,979:INFO:version 3.3.2
2025-06-09 21:20:52,980:INFO:Initializing setup()
2025-06-09 21:20:52,980:INFO:self.USI: 2d8d
2025-06-09 21:20:52,980:INFO:self._variable_keys: {'fold_groups_param', 'transform_target_param', 'exp_name_log', 'log_plots_param', 'y_test', 'fold_shuffle_param', 'memory', 'target_param', 'n_jobs_param', 'pipeline', 'USI', 'y', 'logging_param', 'X', 'gpu_n_jobs_param', 'idx', 'html_param', 'fold_generator', 'X_train', 'exp_id', 'y_train', 'gpu_param', 'X_test', 'seed', '_ml_usecase', '_available_plots', 'data'}
2025-06-09 21:20:52,980:INFO:Checking environment
2025-06-09 21:20:52,980:INFO:python_version: 3.11.10
2025-06-09 21:20:52,980:INFO:python_build: ('main', 'Oct  3 2024 07:22:26')
2025-06-09 21:20:52,980:INFO:machine: AMD64
2025-06-09 21:20:52,980:INFO:platform: Windows-10-10.0.19045-SP0
2025-06-09 21:20:52,980:INFO:Memory: svmem(total=17066795008, available=8644624384, percent=49.3, used=8422170624, free=8644624384)
2025-06-09 21:20:52,981:INFO:Physical Core: 4
2025-06-09 21:20:52,981:INFO:Logical Core: 4
2025-06-09 21:20:52,981:INFO:Checking libraries
2025-06-09 21:20:52,981:INFO:System:
2025-06-09 21:20:52,981:INFO:    python: 3.11.10 | packaged by Anaconda, Inc. | (main, Oct  3 2024, 07:22:26) [MSC v.1929 64 bit (AMD64)]
2025-06-09 21:20:52,981:INFO:executable: c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\python.exe
2025-06-09 21:20:52,981:INFO:   machine: Windows-10-10.0.19045-SP0
2025-06-09 21:20:52,981:INFO:PyCaret required dependencies:
2025-06-09 21:20:53,492:INFO:                 pip: 24.2
2025-06-09 21:20:53,492:INFO:          setuptools: 75.1.0
2025-06-09 21:20:53,492:INFO:             pycaret: 3.3.2
2025-06-09 21:20:53,492:INFO:             IPython: 8.27.0
2025-06-09 21:20:53,492:INFO:          ipywidgets: 8.1.5
2025-06-09 21:20:53,492:INFO:                tqdm: 4.66.6
2025-06-09 21:20:53,492:INFO:               numpy: 1.26.4
2025-06-09 21:20:53,492:INFO:              pandas: 2.1.4
2025-06-09 21:20:53,492:INFO:              jinja2: 3.1.4
2025-06-09 21:20:53,492:INFO:               scipy: 1.11.4
2025-06-09 21:20:53,492:INFO:              joblib: 1.2.0
2025-06-09 21:20:53,492:INFO:             sklearn: 1.4.2
2025-06-09 21:20:53,492:INFO:                pyod: 2.0.2
2025-06-09 21:20:53,492:INFO:            imblearn: 0.13.0
2025-06-09 21:20:53,492:INFO:   category_encoders: 2.6.3
2025-06-09 21:20:53,492:INFO:            lightgbm: 4.5.0
2025-06-09 21:20:53,492:INFO:               numba: 0.60.0
2025-06-09 21:20:53,492:INFO:            requests: 2.32.3
2025-06-09 21:20:53,492:INFO:          matplotlib: 3.7.5
2025-06-09 21:20:53,492:INFO:          scikitplot: 0.3.7
2025-06-09 21:20:53,492:INFO:         yellowbrick: 1.5
2025-06-09 21:20:53,492:INFO:              plotly: 5.24.1
2025-06-09 21:20:53,492:INFO:    plotly-resampler: Not installed
2025-06-09 21:20:53,492:INFO:             kaleido: 0.2.1
2025-06-09 21:20:53,492:INFO:           schemdraw: 0.15
2025-06-09 21:20:53,492:INFO:         statsmodels: 0.14.4
2025-06-09 21:20:53,492:INFO:              sktime: 0.26.0
2025-06-09 21:20:53,492:INFO:               tbats: 1.1.3
2025-06-09 21:20:53,492:INFO:            pmdarima: 2.0.4
2025-06-09 21:20:53,492:INFO:              psutil: 5.9.0
2025-06-09 21:20:53,492:INFO:          markupsafe: 2.1.3
2025-06-09 21:20:53,492:INFO:             pickle5: Not installed
2025-06-09 21:20:53,492:INFO:         cloudpickle: 3.0.0
2025-06-09 21:20:53,492:INFO:         deprecation: 2.1.0
2025-06-09 21:20:53,492:INFO:              xxhash: 3.5.0
2025-06-09 21:20:53,492:INFO:           wurlitzer: 3.1.1
2025-06-09 21:20:53,492:INFO:PyCaret optional dependencies:
2025-06-09 21:20:54,297:INFO:                shap: Not installed
2025-06-09 21:20:54,297:INFO:           interpret: Not installed
2025-06-09 21:20:54,297:INFO:                umap: 0.5.3
2025-06-09 21:20:54,297:INFO:     ydata_profiling: 4.12.1
2025-06-09 21:20:54,297:INFO:  explainerdashboard: Not installed
2025-06-09 21:20:54,297:INFO:             autoviz: Not installed
2025-06-09 21:20:54,297:INFO:           fairlearn: Not installed
2025-06-09 21:20:54,297:INFO:          deepchecks: Not installed
2025-06-09 21:20:54,297:INFO:             xgboost: 2.1.1
2025-06-09 21:20:54,297:INFO:            catboost: 1.2.3
2025-06-09 21:20:54,297:INFO:              kmodes: 0.12.2
2025-06-09 21:20:54,307:INFO:             mlxtend: 0.23.4
2025-06-09 21:20:54,307:INFO:       statsforecast: Not installed
2025-06-09 21:20:54,307:INFO:        tune_sklearn: Not installed
2025-06-09 21:20:54,307:INFO:                 ray: Not installed
2025-06-09 21:20:54,308:INFO:            hyperopt: Not installed
2025-06-09 21:20:54,308:INFO:              optuna: Not installed
2025-06-09 21:20:54,308:INFO:               skopt: Not installed
2025-06-09 21:20:54,308:INFO:              mlflow: 2.16.0
2025-06-09 21:20:54,308:INFO:              gradio: Not installed
2025-06-09 21:20:54,308:INFO:             fastapi: 0.112.2
2025-06-09 21:20:54,308:INFO:             uvicorn: 0.32.1
2025-06-09 21:20:54,308:INFO:              m2cgen: Not installed
2025-06-09 21:20:54,308:INFO:           evidently: 0.6.0
2025-06-09 21:20:54,308:INFO:               fugue: Not installed
2025-06-09 21:20:54,308:INFO:           streamlit: 1.41.1
2025-06-09 21:20:54,308:INFO:             prophet: Not installed
2025-06-09 21:20:54,308:INFO:None
2025-06-09 21:20:54,308:INFO:Set up data.
2025-06-09 21:20:54,328:INFO:Set up folding strategy.
2025-06-09 21:20:54,328:INFO:Set up train/test split.
2025-06-09 21:20:54,347:INFO:Set up index.
2025-06-09 21:20:54,347:INFO:Assigning column types.
2025-06-09 21:20:54,358:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-09 21:20:54,358:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,367:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,381:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,475:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,561:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,561:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:54,564:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:54,737:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,744:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,753:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,910:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:54,911:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:54,911:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-09 21:20:54,917:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 21:20:54,927:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,017:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,095:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:55,097:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:55,107:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,115:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,210:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,276:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:55,278:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:55,278:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-09 21:20:55,294:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,379:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,447:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:55,447:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:55,458:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,547:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,617:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,617:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:55,617:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:55,617:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-09 21:20:55,724:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,791:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,792:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:55,792:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:55,897:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,960:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 21:20:55,960:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:55,967:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:55,967:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-09 21:20:56,060:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:56,128:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:56,128:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:56,239:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 21:20:56,311:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:56,315:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:56,315:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-09 21:20:56,477:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:56,480:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:56,647:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:56,647:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:56,647:INFO:Preparing preprocessing pipeline...
2025-06-09 21:20:56,647:INFO:Set up simple imputation.
2025-06-09 21:20:56,674:INFO:Set up encoding of ordinal features.
2025-06-09 21:20:56,677:INFO:Set up encoding of categorical features.
2025-06-09 21:20:56,677:INFO:Set up column name cleaning.
2025-06-09 21:20:56,759:INFO:Finished creating preprocessing pipeline.
2025-06-09 21:20:56,790:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Mateusz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-06-09 21:20:56,790:INFO:Creating final display dataframe.
2025-06-09 21:20:57,016:INFO:Setup _display_container:                     Description             Value
0                    Session id                33
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (17927, 4)
4        Transformed data shape        (17927, 4)
5   Transformed train set shape        (12548, 4)
6    Transformed test set shape         (5379, 4)
7              Numeric features                 2
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              2d8d
2025-06-09 21:20:57,198:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:57,207:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:57,367:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 21:20:57,376:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 21:20:57,377:INFO:setup() successfully completed in 4.43s...............
2025-06-09 21:21:00,927:INFO:Initializing compare_models()
2025-06-09 21:21:00,927:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-06-09 21:21:00,928:INFO:Checking exceptions
2025-06-09 21:21:00,931:INFO:Preparing display monitor
2025-06-09 21:21:00,977:INFO:Initializing Linear Regression
2025-06-09 21:21:00,977:INFO:Total runtime is 0.0 minutes
2025-06-09 21:21:00,985:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:00,987:INFO:Initializing create_model()
2025-06-09 21:21:00,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:00,987:INFO:Checking exceptions
2025-06-09 21:21:00,987:INFO:Importing libraries
2025-06-09 21:21:00,987:INFO:Copying training dataset
2025-06-09 21:21:01,000:INFO:Defining folds
2025-06-09 21:21:01,000:INFO:Declaring metric variables
2025-06-09 21:21:01,012:INFO:Importing untrained model
2025-06-09 21:21:01,020:INFO:Linear Regression Imported successfully
2025-06-09 21:21:01,033:INFO:Starting cross validation
2025-06-09 21:21:01,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:06,870:INFO:Calculating mean and std
2025-06-09 21:21:06,870:INFO:Creating metrics dataframe
2025-06-09 21:21:06,877:INFO:Uploading results into container
2025-06-09 21:21:06,878:INFO:Uploading model into container now
2025-06-09 21:21:06,878:INFO:_master_model_container: 1
2025-06-09 21:21:06,878:INFO:_display_container: 2
2025-06-09 21:21:06,878:INFO:LinearRegression(n_jobs=-1)
2025-06-09 21:21:06,878:INFO:create_model() successfully completed......................................
2025-06-09 21:21:07,124:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:07,124:INFO:Creating metrics dataframe
2025-06-09 21:21:07,132:INFO:Initializing Lasso Regression
2025-06-09 21:21:07,132:INFO:Total runtime is 0.10258497397104899 minutes
2025-06-09 21:21:07,137:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:07,137:INFO:Initializing create_model()
2025-06-09 21:21:07,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:07,137:INFO:Checking exceptions
2025-06-09 21:21:07,137:INFO:Importing libraries
2025-06-09 21:21:07,138:INFO:Copying training dataset
2025-06-09 21:21:07,147:INFO:Defining folds
2025-06-09 21:21:07,147:INFO:Declaring metric variables
2025-06-09 21:21:07,147:INFO:Importing untrained model
2025-06-09 21:21:07,159:INFO:Lasso Regression Imported successfully
2025-06-09 21:21:07,176:INFO:Starting cross validation
2025-06-09 21:21:07,179:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:07,467:INFO:Calculating mean and std
2025-06-09 21:21:07,467:INFO:Creating metrics dataframe
2025-06-09 21:21:07,467:INFO:Uploading results into container
2025-06-09 21:21:07,478:INFO:Uploading model into container now
2025-06-09 21:21:07,478:INFO:_master_model_container: 2
2025-06-09 21:21:07,478:INFO:_display_container: 2
2025-06-09 21:21:07,479:INFO:Lasso(random_state=33)
2025-06-09 21:21:07,480:INFO:create_model() successfully completed......................................
2025-06-09 21:21:07,653:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:07,653:INFO:Creating metrics dataframe
2025-06-09 21:21:07,664:INFO:Initializing Ridge Regression
2025-06-09 21:21:07,664:INFO:Total runtime is 0.11143788894017537 minutes
2025-06-09 21:21:07,668:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:07,668:INFO:Initializing create_model()
2025-06-09 21:21:07,668:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:07,669:INFO:Checking exceptions
2025-06-09 21:21:07,669:INFO:Importing libraries
2025-06-09 21:21:07,669:INFO:Copying training dataset
2025-06-09 21:21:07,677:INFO:Defining folds
2025-06-09 21:21:07,677:INFO:Declaring metric variables
2025-06-09 21:21:07,677:INFO:Importing untrained model
2025-06-09 21:21:07,691:INFO:Ridge Regression Imported successfully
2025-06-09 21:21:07,703:INFO:Starting cross validation
2025-06-09 21:21:07,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:07,990:INFO:Calculating mean and std
2025-06-09 21:21:07,990:INFO:Creating metrics dataframe
2025-06-09 21:21:07,990:INFO:Uploading results into container
2025-06-09 21:21:07,990:INFO:Uploading model into container now
2025-06-09 21:21:07,997:INFO:_master_model_container: 3
2025-06-09 21:21:07,997:INFO:_display_container: 2
2025-06-09 21:21:07,997:INFO:Ridge(random_state=33)
2025-06-09 21:21:07,997:INFO:create_model() successfully completed......................................
2025-06-09 21:21:08,160:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:08,160:INFO:Creating metrics dataframe
2025-06-09 21:21:08,177:INFO:Initializing Elastic Net
2025-06-09 21:21:08,177:INFO:Total runtime is 0.12000151475270589 minutes
2025-06-09 21:21:08,181:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:08,181:INFO:Initializing create_model()
2025-06-09 21:21:08,182:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:08,182:INFO:Checking exceptions
2025-06-09 21:21:08,182:INFO:Importing libraries
2025-06-09 21:21:08,183:INFO:Copying training dataset
2025-06-09 21:21:08,190:INFO:Defining folds
2025-06-09 21:21:08,190:INFO:Declaring metric variables
2025-06-09 21:21:08,197:INFO:Importing untrained model
2025-06-09 21:21:08,207:INFO:Elastic Net Imported successfully
2025-06-09 21:21:08,220:INFO:Starting cross validation
2025-06-09 21:21:08,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:08,487:INFO:Calculating mean and std
2025-06-09 21:21:08,487:INFO:Creating metrics dataframe
2025-06-09 21:21:08,490:INFO:Uploading results into container
2025-06-09 21:21:08,490:INFO:Uploading model into container now
2025-06-09 21:21:08,490:INFO:_master_model_container: 4
2025-06-09 21:21:08,490:INFO:_display_container: 2
2025-06-09 21:21:08,490:INFO:ElasticNet(random_state=33)
2025-06-09 21:21:08,495:INFO:create_model() successfully completed......................................
2025-06-09 21:21:08,662:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:08,662:INFO:Creating metrics dataframe
2025-06-09 21:21:08,667:INFO:Initializing Least Angle Regression
2025-06-09 21:21:08,667:INFO:Total runtime is 0.1281680663426717 minutes
2025-06-09 21:21:08,677:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:08,677:INFO:Initializing create_model()
2025-06-09 21:21:08,677:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:08,677:INFO:Checking exceptions
2025-06-09 21:21:08,677:INFO:Importing libraries
2025-06-09 21:21:08,677:INFO:Copying training dataset
2025-06-09 21:21:08,687:INFO:Defining folds
2025-06-09 21:21:08,687:INFO:Declaring metric variables
2025-06-09 21:21:08,687:INFO:Importing untrained model
2025-06-09 21:21:08,705:INFO:Least Angle Regression Imported successfully
2025-06-09 21:21:08,707:INFO:Starting cross validation
2025-06-09 21:21:08,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:08,992:INFO:Calculating mean and std
2025-06-09 21:21:08,993:INFO:Creating metrics dataframe
2025-06-09 21:21:08,993:INFO:Uploading results into container
2025-06-09 21:21:08,993:INFO:Uploading model into container now
2025-06-09 21:21:08,997:INFO:_master_model_container: 5
2025-06-09 21:21:08,997:INFO:_display_container: 2
2025-06-09 21:21:08,997:INFO:Lars(random_state=33)
2025-06-09 21:21:08,997:INFO:create_model() successfully completed......................................
2025-06-09 21:21:09,162:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:09,162:INFO:Creating metrics dataframe
2025-06-09 21:21:09,177:INFO:Initializing Lasso Least Angle Regression
2025-06-09 21:21:09,177:INFO:Total runtime is 0.13666244745254516 minutes
2025-06-09 21:21:09,187:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:09,188:INFO:Initializing create_model()
2025-06-09 21:21:09,188:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:09,189:INFO:Checking exceptions
2025-06-09 21:21:09,189:INFO:Importing libraries
2025-06-09 21:21:09,189:INFO:Copying training dataset
2025-06-09 21:21:09,197:INFO:Defining folds
2025-06-09 21:21:09,197:INFO:Declaring metric variables
2025-06-09 21:21:09,202:INFO:Importing untrained model
2025-06-09 21:21:09,207:INFO:Lasso Least Angle Regression Imported successfully
2025-06-09 21:21:09,222:INFO:Starting cross validation
2025-06-09 21:21:09,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:09,498:INFO:Calculating mean and std
2025-06-09 21:21:09,499:INFO:Creating metrics dataframe
2025-06-09 21:21:09,501:INFO:Uploading results into container
2025-06-09 21:21:09,503:INFO:Uploading model into container now
2025-06-09 21:21:09,504:INFO:_master_model_container: 6
2025-06-09 21:21:09,504:INFO:_display_container: 2
2025-06-09 21:21:09,505:INFO:LassoLars(random_state=33)
2025-06-09 21:21:09,506:INFO:create_model() successfully completed......................................
2025-06-09 21:21:09,671:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:09,671:INFO:Creating metrics dataframe
2025-06-09 21:21:09,688:INFO:Initializing Orthogonal Matching Pursuit
2025-06-09 21:21:09,688:INFO:Total runtime is 0.1451723337173462 minutes
2025-06-09 21:21:09,692:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:09,692:INFO:Initializing create_model()
2025-06-09 21:21:09,692:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:09,693:INFO:Checking exceptions
2025-06-09 21:21:09,693:INFO:Importing libraries
2025-06-09 21:21:09,693:INFO:Copying training dataset
2025-06-09 21:21:09,702:INFO:Defining folds
2025-06-09 21:21:09,702:INFO:Declaring metric variables
2025-06-09 21:21:09,707:INFO:Importing untrained model
2025-06-09 21:21:09,707:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-09 21:21:09,728:INFO:Starting cross validation
2025-06-09 21:21:09,728:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:09,997:INFO:Calculating mean and std
2025-06-09 21:21:10,006:INFO:Creating metrics dataframe
2025-06-09 21:21:10,007:INFO:Uploading results into container
2025-06-09 21:21:10,007:INFO:Uploading model into container now
2025-06-09 21:21:10,007:INFO:_master_model_container: 7
2025-06-09 21:21:10,007:INFO:_display_container: 2
2025-06-09 21:21:10,007:INFO:OrthogonalMatchingPursuit()
2025-06-09 21:21:10,007:INFO:create_model() successfully completed......................................
2025-06-09 21:21:10,176:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:10,176:INFO:Creating metrics dataframe
2025-06-09 21:21:10,189:INFO:Initializing Bayesian Ridge
2025-06-09 21:21:10,189:INFO:Total runtime is 0.1535323699315389 minutes
2025-06-09 21:21:10,191:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:10,191:INFO:Initializing create_model()
2025-06-09 21:21:10,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:10,191:INFO:Checking exceptions
2025-06-09 21:21:10,191:INFO:Importing libraries
2025-06-09 21:21:10,191:INFO:Copying training dataset
2025-06-09 21:21:10,207:INFO:Defining folds
2025-06-09 21:21:10,207:INFO:Declaring metric variables
2025-06-09 21:21:10,207:INFO:Importing untrained model
2025-06-09 21:21:10,219:INFO:Bayesian Ridge Imported successfully
2025-06-09 21:21:10,227:INFO:Starting cross validation
2025-06-09 21:21:10,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:10,500:INFO:Calculating mean and std
2025-06-09 21:21:10,500:INFO:Creating metrics dataframe
2025-06-09 21:21:10,508:INFO:Uploading results into container
2025-06-09 21:21:10,508:INFO:Uploading model into container now
2025-06-09 21:21:10,508:INFO:_master_model_container: 8
2025-06-09 21:21:10,508:INFO:_display_container: 2
2025-06-09 21:21:10,508:INFO:BayesianRidge()
2025-06-09 21:21:10,508:INFO:create_model() successfully completed......................................
2025-06-09 21:21:10,669:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:10,669:INFO:Creating metrics dataframe
2025-06-09 21:21:10,689:INFO:Initializing Passive Aggressive Regressor
2025-06-09 21:21:10,689:INFO:Total runtime is 0.16186395486195881 minutes
2025-06-09 21:21:10,689:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:10,689:INFO:Initializing create_model()
2025-06-09 21:21:10,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:10,689:INFO:Checking exceptions
2025-06-09 21:21:10,689:INFO:Importing libraries
2025-06-09 21:21:10,697:INFO:Copying training dataset
2025-06-09 21:21:10,703:INFO:Defining folds
2025-06-09 21:21:10,703:INFO:Declaring metric variables
2025-06-09 21:21:10,707:INFO:Importing untrained model
2025-06-09 21:21:10,729:INFO:Passive Aggressive Regressor Imported successfully
2025-06-09 21:21:10,777:INFO:Starting cross validation
2025-06-09 21:21:10,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:11,103:INFO:Calculating mean and std
2025-06-09 21:21:11,107:INFO:Creating metrics dataframe
2025-06-09 21:21:11,107:INFO:Uploading results into container
2025-06-09 21:21:11,107:INFO:Uploading model into container now
2025-06-09 21:21:11,107:INFO:_master_model_container: 9
2025-06-09 21:21:11,107:INFO:_display_container: 2
2025-06-09 21:21:11,107:INFO:PassiveAggressiveRegressor(random_state=33)
2025-06-09 21:21:11,112:INFO:create_model() successfully completed......................................
2025-06-09 21:21:11,280:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:11,280:INFO:Creating metrics dataframe
2025-06-09 21:21:11,293:INFO:Initializing Huber Regressor
2025-06-09 21:21:11,293:INFO:Total runtime is 0.17193003098169962 minutes
2025-06-09 21:21:11,297:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:11,297:INFO:Initializing create_model()
2025-06-09 21:21:11,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:11,297:INFO:Checking exceptions
2025-06-09 21:21:11,298:INFO:Importing libraries
2025-06-09 21:21:11,298:INFO:Copying training dataset
2025-06-09 21:21:11,307:INFO:Defining folds
2025-06-09 21:21:11,307:INFO:Declaring metric variables
2025-06-09 21:21:11,307:INFO:Importing untrained model
2025-06-09 21:21:11,320:INFO:Huber Regressor Imported successfully
2025-06-09 21:21:11,327:INFO:Starting cross validation
2025-06-09 21:21:11,327:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:11,887:INFO:Calculating mean and std
2025-06-09 21:21:11,887:INFO:Creating metrics dataframe
2025-06-09 21:21:11,887:INFO:Uploading results into container
2025-06-09 21:21:11,887:INFO:Uploading model into container now
2025-06-09 21:21:11,887:INFO:_master_model_container: 10
2025-06-09 21:21:11,887:INFO:_display_container: 2
2025-06-09 21:21:11,898:INFO:HuberRegressor()
2025-06-09 21:21:11,899:INFO:create_model() successfully completed......................................
2025-06-09 21:21:12,057:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:12,057:INFO:Creating metrics dataframe
2025-06-09 21:21:12,078:INFO:Initializing K Neighbors Regressor
2025-06-09 21:21:12,078:INFO:Total runtime is 0.18500786225001017 minutes
2025-06-09 21:21:12,083:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:12,083:INFO:Initializing create_model()
2025-06-09 21:21:12,083:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:12,083:INFO:Checking exceptions
2025-06-09 21:21:12,084:INFO:Importing libraries
2025-06-09 21:21:12,084:INFO:Copying training dataset
2025-06-09 21:21:12,094:INFO:Defining folds
2025-06-09 21:21:12,094:INFO:Declaring metric variables
2025-06-09 21:21:12,098:INFO:Importing untrained model
2025-06-09 21:21:12,106:INFO:K Neighbors Regressor Imported successfully
2025-06-09 21:21:12,110:INFO:Starting cross validation
2025-06-09 21:21:12,117:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:12,511:INFO:Calculating mean and std
2025-06-09 21:21:12,512:INFO:Creating metrics dataframe
2025-06-09 21:21:12,514:INFO:Uploading results into container
2025-06-09 21:21:12,515:INFO:Uploading model into container now
2025-06-09 21:21:12,516:INFO:_master_model_container: 11
2025-06-09 21:21:12,516:INFO:_display_container: 2
2025-06-09 21:21:12,516:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-09 21:21:12,517:INFO:create_model() successfully completed......................................
2025-06-09 21:21:12,690:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:12,691:INFO:Creating metrics dataframe
2025-06-09 21:21:12,702:INFO:Initializing Decision Tree Regressor
2025-06-09 21:21:12,703:INFO:Total runtime is 0.19541303316752115 minutes
2025-06-09 21:21:12,706:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:12,707:INFO:Initializing create_model()
2025-06-09 21:21:12,707:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:12,707:INFO:Checking exceptions
2025-06-09 21:21:12,708:INFO:Importing libraries
2025-06-09 21:21:12,708:INFO:Copying training dataset
2025-06-09 21:21:12,716:INFO:Defining folds
2025-06-09 21:21:12,716:INFO:Declaring metric variables
2025-06-09 21:21:12,721:INFO:Importing untrained model
2025-06-09 21:21:12,727:INFO:Decision Tree Regressor Imported successfully
2025-06-09 21:21:12,739:INFO:Starting cross validation
2025-06-09 21:21:12,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:13,165:INFO:Calculating mean and std
2025-06-09 21:21:13,166:INFO:Creating metrics dataframe
2025-06-09 21:21:13,170:INFO:Uploading results into container
2025-06-09 21:21:13,171:INFO:Uploading model into container now
2025-06-09 21:21:13,172:INFO:_master_model_container: 12
2025-06-09 21:21:13,172:INFO:_display_container: 2
2025-06-09 21:21:13,172:INFO:DecisionTreeRegressor(random_state=33)
2025-06-09 21:21:13,173:INFO:create_model() successfully completed......................................
2025-06-09 21:21:13,347:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:13,347:INFO:Creating metrics dataframe
2025-06-09 21:21:13,363:INFO:Initializing Random Forest Regressor
2025-06-09 21:21:13,363:INFO:Total runtime is 0.20643230676651 minutes
2025-06-09 21:21:13,368:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:13,369:INFO:Initializing create_model()
2025-06-09 21:21:13,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:13,369:INFO:Checking exceptions
2025-06-09 21:21:13,369:INFO:Importing libraries
2025-06-09 21:21:13,369:INFO:Copying training dataset
2025-06-09 21:21:13,380:INFO:Defining folds
2025-06-09 21:21:13,380:INFO:Declaring metric variables
2025-06-09 21:21:13,387:INFO:Importing untrained model
2025-06-09 21:21:13,394:INFO:Random Forest Regressor Imported successfully
2025-06-09 21:21:13,419:INFO:Starting cross validation
2025-06-09 21:21:13,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:22,451:INFO:Calculating mean and std
2025-06-09 21:21:22,453:INFO:Creating metrics dataframe
2025-06-09 21:21:22,456:INFO:Uploading results into container
2025-06-09 21:21:22,457:INFO:Uploading model into container now
2025-06-09 21:21:22,458:INFO:_master_model_container: 13
2025-06-09 21:21:22,458:INFO:_display_container: 2
2025-06-09 21:21:22,460:INFO:RandomForestRegressor(n_jobs=-1, random_state=33)
2025-06-09 21:21:22,460:INFO:create_model() successfully completed......................................
2025-06-09 21:21:22,620:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:22,620:INFO:Creating metrics dataframe
2025-06-09 21:21:22,639:INFO:Initializing Extra Trees Regressor
2025-06-09 21:21:22,639:INFO:Total runtime is 0.36102386315663654 minutes
2025-06-09 21:21:22,643:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:22,644:INFO:Initializing create_model()
2025-06-09 21:21:22,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:22,644:INFO:Checking exceptions
2025-06-09 21:21:22,644:INFO:Importing libraries
2025-06-09 21:21:22,644:INFO:Copying training dataset
2025-06-09 21:21:22,654:INFO:Defining folds
2025-06-09 21:21:22,654:INFO:Declaring metric variables
2025-06-09 21:21:22,660:INFO:Importing untrained model
2025-06-09 21:21:22,666:INFO:Extra Trees Regressor Imported successfully
2025-06-09 21:21:22,677:INFO:Starting cross validation
2025-06-09 21:21:22,677:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:29,089:INFO:Calculating mean and std
2025-06-09 21:21:29,089:INFO:Creating metrics dataframe
2025-06-09 21:21:29,099:INFO:Uploading results into container
2025-06-09 21:21:29,099:INFO:Uploading model into container now
2025-06-09 21:21:29,099:INFO:_master_model_container: 14
2025-06-09 21:21:29,099:INFO:_display_container: 2
2025-06-09 21:21:29,099:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=33)
2025-06-09 21:21:29,099:INFO:create_model() successfully completed......................................
2025-06-09 21:21:29,276:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:29,276:INFO:Creating metrics dataframe
2025-06-09 21:21:29,290:INFO:Initializing AdaBoost Regressor
2025-06-09 21:21:29,290:INFO:Total runtime is 0.47187277078628537 minutes
2025-06-09 21:21:29,294:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:29,294:INFO:Initializing create_model()
2025-06-09 21:21:29,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:29,294:INFO:Checking exceptions
2025-06-09 21:21:29,295:INFO:Importing libraries
2025-06-09 21:21:29,295:INFO:Copying training dataset
2025-06-09 21:21:29,299:INFO:Defining folds
2025-06-09 21:21:29,299:INFO:Declaring metric variables
2025-06-09 21:21:29,307:INFO:Importing untrained model
2025-06-09 21:21:29,315:INFO:AdaBoost Regressor Imported successfully
2025-06-09 21:21:29,329:INFO:Starting cross validation
2025-06-09 21:21:29,332:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:30,377:INFO:Calculating mean and std
2025-06-09 21:21:30,377:INFO:Creating metrics dataframe
2025-06-09 21:21:30,384:INFO:Uploading results into container
2025-06-09 21:21:30,384:INFO:Uploading model into container now
2025-06-09 21:21:30,384:INFO:_master_model_container: 15
2025-06-09 21:21:30,384:INFO:_display_container: 2
2025-06-09 21:21:30,384:INFO:AdaBoostRegressor(random_state=33)
2025-06-09 21:21:30,387:INFO:create_model() successfully completed......................................
2025-06-09 21:21:30,552:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:30,552:INFO:Creating metrics dataframe
2025-06-09 21:21:30,567:INFO:Initializing Gradient Boosting Regressor
2025-06-09 21:21:30,567:INFO:Total runtime is 0.49317080974578853 minutes
2025-06-09 21:21:30,571:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:30,572:INFO:Initializing create_model()
2025-06-09 21:21:30,572:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:30,572:INFO:Checking exceptions
2025-06-09 21:21:30,573:INFO:Importing libraries
2025-06-09 21:21:30,573:INFO:Copying training dataset
2025-06-09 21:21:30,582:INFO:Defining folds
2025-06-09 21:21:30,582:INFO:Declaring metric variables
2025-06-09 21:21:30,586:INFO:Importing untrained model
2025-06-09 21:21:30,598:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 21:21:30,607:INFO:Starting cross validation
2025-06-09 21:21:30,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:33,052:INFO:Calculating mean and std
2025-06-09 21:21:33,052:INFO:Creating metrics dataframe
2025-06-09 21:21:33,052:INFO:Uploading results into container
2025-06-09 21:21:33,057:INFO:Uploading model into container now
2025-06-09 21:21:33,057:INFO:_master_model_container: 16
2025-06-09 21:21:33,057:INFO:_display_container: 2
2025-06-09 21:21:33,057:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 21:21:33,057:INFO:create_model() successfully completed......................................
2025-06-09 21:21:33,217:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:33,217:INFO:Creating metrics dataframe
2025-06-09 21:21:33,237:INFO:Initializing Extreme Gradient Boosting
2025-06-09 21:21:33,237:INFO:Total runtime is 0.537665855884552 minutes
2025-06-09 21:21:33,247:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:33,247:INFO:Initializing create_model()
2025-06-09 21:21:33,247:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:33,247:INFO:Checking exceptions
2025-06-09 21:21:33,247:INFO:Importing libraries
2025-06-09 21:21:33,247:INFO:Copying training dataset
2025-06-09 21:21:33,257:INFO:Defining folds
2025-06-09 21:21:33,257:INFO:Declaring metric variables
2025-06-09 21:21:33,267:INFO:Importing untrained model
2025-06-09 21:21:33,267:INFO:Extreme Gradient Boosting Imported successfully
2025-06-09 21:21:33,285:INFO:Starting cross validation
2025-06-09 21:21:33,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:34,021:INFO:Calculating mean and std
2025-06-09 21:21:34,028:INFO:Creating metrics dataframe
2025-06-09 21:21:34,028:INFO:Uploading results into container
2025-06-09 21:21:34,031:INFO:Uploading model into container now
2025-06-09 21:21:34,031:INFO:_master_model_container: 17
2025-06-09 21:21:34,031:INFO:_display_container: 2
2025-06-09 21:21:34,031:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=33, ...)
2025-06-09 21:21:34,031:INFO:create_model() successfully completed......................................
2025-06-09 21:21:34,194:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:34,194:INFO:Creating metrics dataframe
2025-06-09 21:21:34,211:INFO:Initializing Light Gradient Boosting Machine
2025-06-09 21:21:34,211:INFO:Total runtime is 0.5538890163103739 minutes
2025-06-09 21:21:34,217:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:34,217:INFO:Initializing create_model()
2025-06-09 21:21:34,217:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:34,217:INFO:Checking exceptions
2025-06-09 21:21:34,217:INFO:Importing libraries
2025-06-09 21:21:34,217:INFO:Copying training dataset
2025-06-09 21:21:34,217:INFO:Defining folds
2025-06-09 21:21:34,217:INFO:Declaring metric variables
2025-06-09 21:21:34,231:INFO:Importing untrained model
2025-06-09 21:21:34,237:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-09 21:21:34,252:INFO:Starting cross validation
2025-06-09 21:21:34,253:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:35,584:INFO:Calculating mean and std
2025-06-09 21:21:35,585:INFO:Creating metrics dataframe
2025-06-09 21:21:35,590:INFO:Uploading results into container
2025-06-09 21:21:35,592:INFO:Uploading model into container now
2025-06-09 21:21:35,592:INFO:_master_model_container: 18
2025-06-09 21:21:35,592:INFO:_display_container: 2
2025-06-09 21:21:35,593:INFO:LGBMRegressor(n_jobs=-1, random_state=33)
2025-06-09 21:21:35,593:INFO:create_model() successfully completed......................................
2025-06-09 21:21:35,764:INFO:SubProcess create_model() end ==================================
2025-06-09 21:21:35,764:INFO:Creating metrics dataframe
2025-06-09 21:21:35,780:INFO:Initializing CatBoost Regressor
2025-06-09 21:21:35,780:INFO:Total runtime is 0.5800490299860636 minutes
2025-06-09 21:21:35,784:INFO:SubProcess create_model() called ==================================
2025-06-09 21:21:35,784:INFO:Initializing create_model()
2025-06-09 21:21:35,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:35,785:INFO:Checking exceptions
2025-06-09 21:21:35,785:INFO:Importing libraries
2025-06-09 21:21:35,785:INFO:Copying training dataset
2025-06-09 21:21:35,794:INFO:Defining folds
2025-06-09 21:21:35,795:INFO:Declaring metric variables
2025-06-09 21:21:35,800:INFO:Importing untrained model
2025-06-09 21:21:35,811:INFO:CatBoost Regressor Imported successfully
2025-06-09 21:21:35,822:INFO:Starting cross validation
2025-06-09 21:21:35,830:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:21:47,097:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\catboost\core.py", line 5807, in fit
    return self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\catboost\core.py", line 2396, in _fit
    self._train(
  File "c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\catboost\core.py", line 1776, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4833, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4882, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-06-09 21:21:47,097:INFO:Calculating mean and std
2025-06-09 21:21:47,097:INFO:Creating metrics dataframe
2025-06-09 21:21:47,103:INFO:Uploading results into container
2025-06-09 21:21:47,105:INFO:Uploading model into container now
2025-06-09 21:21:47,106:INFO:_master_model_container: 19
2025-06-09 21:21:47,107:INFO:_display_container: 2
2025-06-09 21:21:47,107:INFO:<catboost.core.CatBoostRegressor object at 0x0000025F9B1F5A10>
2025-06-09 21:21:47,108:INFO:create_model() successfully completed......................................
2025-06-09 21:21:47,299:WARNING:create_model() for <catboost.core.CatBoostRegressor object at 0x0000025F9B1F5A10> raised an exception or returned all 0.0, trying without fit_kwargs:
2025-06-09 21:21:47,301:WARNING:Traceback (most recent call last):
  File "c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-06-09 21:21:47,301:INFO:Initializing create_model()
2025-06-09 21:21:47,301:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:21:47,301:INFO:Checking exceptions
2025-06-09 21:21:47,302:INFO:Importing libraries
2025-06-09 21:21:47,302:INFO:Copying training dataset
2025-06-09 21:21:47,310:INFO:Defining folds
2025-06-09 21:21:47,310:INFO:Declaring metric variables
2025-06-09 21:21:47,317:INFO:Importing untrained model
2025-06-09 21:21:47,323:INFO:CatBoost Regressor Imported successfully
2025-06-09 21:21:47,327:INFO:Starting cross validation
2025-06-09 21:21:47,327:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:22:02,889:INFO:Calculating mean and std
2025-06-09 21:22:02,889:INFO:Creating metrics dataframe
2025-06-09 21:22:02,897:INFO:Uploading results into container
2025-06-09 21:22:02,898:INFO:Uploading model into container now
2025-06-09 21:22:02,902:INFO:_master_model_container: 20
2025-06-09 21:22:02,903:INFO:_display_container: 2
2025-06-09 21:22:02,903:INFO:<catboost.core.CatBoostRegressor object at 0x0000025F9B44DAD0>
2025-06-09 21:22:02,903:INFO:create_model() successfully completed......................................
2025-06-09 21:22:03,137:INFO:SubProcess create_model() end ==================================
2025-06-09 21:22:03,137:INFO:Creating metrics dataframe
2025-06-09 21:22:03,155:INFO:Initializing Dummy Regressor
2025-06-09 21:22:03,155:INFO:Total runtime is 1.0362993319829303 minutes
2025-06-09 21:22:03,161:INFO:SubProcess create_model() called ==================================
2025-06-09 21:22:03,161:INFO:Initializing create_model()
2025-06-09 21:22:03,161:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DE7710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:22:03,161:INFO:Checking exceptions
2025-06-09 21:22:03,161:INFO:Importing libraries
2025-06-09 21:22:03,161:INFO:Copying training dataset
2025-06-09 21:22:03,173:INFO:Defining folds
2025-06-09 21:22:03,173:INFO:Declaring metric variables
2025-06-09 21:22:03,178:INFO:Importing untrained model
2025-06-09 21:22:03,187:INFO:Dummy Regressor Imported successfully
2025-06-09 21:22:03,197:INFO:Starting cross validation
2025-06-09 21:22:03,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 21:22:03,617:INFO:Calculating mean and std
2025-06-09 21:22:03,621:INFO:Creating metrics dataframe
2025-06-09 21:22:03,629:INFO:Uploading results into container
2025-06-09 21:22:03,629:INFO:Uploading model into container now
2025-06-09 21:22:03,631:INFO:_master_model_container: 21
2025-06-09 21:22:03,631:INFO:_display_container: 2
2025-06-09 21:22:03,631:INFO:DummyRegressor()
2025-06-09 21:22:03,631:INFO:create_model() successfully completed......................................
2025-06-09 21:22:03,817:INFO:SubProcess create_model() end ==================================
2025-06-09 21:22:03,817:INFO:Creating metrics dataframe
2025-06-09 21:22:03,837:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-06-09 21:22:03,847:INFO:Initializing create_model()
2025-06-09 21:22:03,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 21:22:03,847:INFO:Checking exceptions
2025-06-09 21:22:03,852:INFO:Importing libraries
2025-06-09 21:22:03,852:INFO:Copying training dataset
2025-06-09 21:22:03,862:INFO:Defining folds
2025-06-09 21:22:03,863:INFO:Declaring metric variables
2025-06-09 21:22:03,863:INFO:Importing untrained model
2025-06-09 21:22:03,863:INFO:Declaring custom model
2025-06-09 21:22:03,864:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 21:22:03,866:INFO:Cross validation set to False
2025-06-09 21:22:03,866:INFO:Fitting Model
2025-06-09 21:22:04,747:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 21:22:04,747:INFO:create_model() successfully completed......................................
2025-06-09 21:22:04,969:INFO:_master_model_container: 21
2025-06-09 21:22:04,969:INFO:_display_container: 2
2025-06-09 21:22:04,969:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 21:22:04,969:INFO:compare_models() successfully completed......................................
2025-06-09 21:41:27,769:INFO:Initializing plot_model()
2025-06-09 21:41:27,769:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-06-09 21:41:27,769:INFO:Checking exceptions
2025-06-09 21:41:27,789:INFO:Preloading libraries
2025-06-09 21:41:27,805:INFO:Copying training dataset
2025-06-09 21:41:27,805:INFO:Plot type: feature
2025-06-09 21:41:27,806:WARNING:No coef_ found. Trying feature_importances_
2025-06-09 21:41:28,187:INFO:Visual Rendered Successfully
2025-06-09 21:41:28,384:INFO:plot_model() successfully completed......................................
2025-06-09 22:07:09,757:INFO:PyCaret RegressionExperiment
2025-06-09 22:07:09,757:INFO:Logging name: reg-default-name
2025-06-09 22:07:09,757:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-09 22:07:09,757:INFO:version 3.3.2
2025-06-09 22:07:09,757:INFO:Initializing setup()
2025-06-09 22:07:09,757:INFO:self.USI: 1cd6
2025-06-09 22:07:09,757:INFO:self._variable_keys: {'fold_groups_param', 'transform_target_param', 'exp_name_log', 'log_plots_param', 'y_test', 'fold_shuffle_param', 'memory', 'target_param', 'n_jobs_param', 'pipeline', 'USI', 'y', 'logging_param', 'X', 'gpu_n_jobs_param', 'idx', 'html_param', 'fold_generator', 'X_train', 'exp_id', 'y_train', 'gpu_param', 'X_test', 'seed', '_ml_usecase', '_available_plots', 'data'}
2025-06-09 22:07:09,757:INFO:Checking environment
2025-06-09 22:07:09,757:INFO:python_version: 3.11.10
2025-06-09 22:07:09,757:INFO:python_build: ('main', 'Oct  3 2024 07:22:26')
2025-06-09 22:07:09,757:INFO:machine: AMD64
2025-06-09 22:07:09,757:INFO:platform: Windows-10-10.0.19045-SP0
2025-06-09 22:07:09,757:INFO:Memory: svmem(total=17066795008, available=8041783296, percent=52.9, used=9025011712, free=8041783296)
2025-06-09 22:07:09,757:INFO:Physical Core: 4
2025-06-09 22:07:09,757:INFO:Logical Core: 4
2025-06-09 22:07:09,757:INFO:Checking libraries
2025-06-09 22:07:09,757:INFO:System:
2025-06-09 22:07:09,757:INFO:    python: 3.11.10 | packaged by Anaconda, Inc. | (main, Oct  3 2024, 07:22:26) [MSC v.1929 64 bit (AMD64)]
2025-06-09 22:07:09,757:INFO:executable: c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\python.exe
2025-06-09 22:07:09,757:INFO:   machine: Windows-10-10.0.19045-SP0
2025-06-09 22:07:09,757:INFO:PyCaret required dependencies:
2025-06-09 22:07:09,757:INFO:                 pip: 24.2
2025-06-09 22:07:09,757:INFO:          setuptools: 75.1.0
2025-06-09 22:07:09,757:INFO:             pycaret: 3.3.2
2025-06-09 22:07:09,757:INFO:             IPython: 8.27.0
2025-06-09 22:07:09,757:INFO:          ipywidgets: 8.1.5
2025-06-09 22:07:09,757:INFO:                tqdm: 4.66.6
2025-06-09 22:07:09,757:INFO:               numpy: 1.26.4
2025-06-09 22:07:09,757:INFO:              pandas: 2.1.4
2025-06-09 22:07:09,757:INFO:              jinja2: 3.1.4
2025-06-09 22:07:09,757:INFO:               scipy: 1.11.4
2025-06-09 22:07:09,757:INFO:              joblib: 1.2.0
2025-06-09 22:07:09,757:INFO:             sklearn: 1.4.2
2025-06-09 22:07:09,757:INFO:                pyod: 2.0.2
2025-06-09 22:07:09,757:INFO:            imblearn: 0.13.0
2025-06-09 22:07:09,757:INFO:   category_encoders: 2.6.3
2025-06-09 22:07:09,757:INFO:            lightgbm: 4.5.0
2025-06-09 22:07:09,757:INFO:               numba: 0.60.0
2025-06-09 22:07:09,757:INFO:            requests: 2.32.3
2025-06-09 22:07:09,757:INFO:          matplotlib: 3.7.5
2025-06-09 22:07:09,757:INFO:          scikitplot: 0.3.7
2025-06-09 22:07:09,757:INFO:         yellowbrick: 1.5
2025-06-09 22:07:09,757:INFO:              plotly: 5.24.1
2025-06-09 22:07:09,757:INFO:    plotly-resampler: Not installed
2025-06-09 22:07:09,757:INFO:             kaleido: 0.2.1
2025-06-09 22:07:09,757:INFO:           schemdraw: 0.15
2025-06-09 22:07:09,757:INFO:         statsmodels: 0.14.4
2025-06-09 22:07:09,757:INFO:              sktime: 0.26.0
2025-06-09 22:07:09,757:INFO:               tbats: 1.1.3
2025-06-09 22:07:09,757:INFO:            pmdarima: 2.0.4
2025-06-09 22:07:09,757:INFO:              psutil: 5.9.0
2025-06-09 22:07:09,757:INFO:          markupsafe: 2.1.3
2025-06-09 22:07:09,757:INFO:             pickle5: Not installed
2025-06-09 22:07:09,757:INFO:         cloudpickle: 3.0.0
2025-06-09 22:07:09,757:INFO:         deprecation: 2.1.0
2025-06-09 22:07:09,757:INFO:              xxhash: 3.5.0
2025-06-09 22:07:09,757:INFO:           wurlitzer: 3.1.1
2025-06-09 22:07:09,757:INFO:PyCaret optional dependencies:
2025-06-09 22:07:09,757:INFO:                shap: Not installed
2025-06-09 22:07:09,757:INFO:           interpret: Not installed
2025-06-09 22:07:09,757:INFO:                umap: 0.5.3
2025-06-09 22:07:09,757:INFO:     ydata_profiling: 4.12.1
2025-06-09 22:07:09,757:INFO:  explainerdashboard: Not installed
2025-06-09 22:07:09,757:INFO:             autoviz: Not installed
2025-06-09 22:07:09,757:INFO:           fairlearn: Not installed
2025-06-09 22:07:09,757:INFO:          deepchecks: Not installed
2025-06-09 22:07:09,757:INFO:             xgboost: 2.1.1
2025-06-09 22:07:09,757:INFO:            catboost: 1.2.3
2025-06-09 22:07:09,757:INFO:              kmodes: 0.12.2
2025-06-09 22:07:09,757:INFO:             mlxtend: 0.23.4
2025-06-09 22:07:09,757:INFO:       statsforecast: Not installed
2025-06-09 22:07:09,757:INFO:        tune_sklearn: Not installed
2025-06-09 22:07:09,757:INFO:                 ray: Not installed
2025-06-09 22:07:09,757:INFO:            hyperopt: Not installed
2025-06-09 22:07:09,757:INFO:              optuna: Not installed
2025-06-09 22:07:09,757:INFO:               skopt: Not installed
2025-06-09 22:07:09,757:INFO:              mlflow: 2.16.0
2025-06-09 22:07:09,757:INFO:              gradio: Not installed
2025-06-09 22:07:09,757:INFO:             fastapi: 0.112.2
2025-06-09 22:07:09,757:INFO:             uvicorn: 0.32.1
2025-06-09 22:07:09,757:INFO:              m2cgen: Not installed
2025-06-09 22:07:09,757:INFO:           evidently: 0.6.0
2025-06-09 22:07:09,757:INFO:               fugue: Not installed
2025-06-09 22:07:09,757:INFO:           streamlit: 1.41.1
2025-06-09 22:07:09,757:INFO:             prophet: Not installed
2025-06-09 22:07:09,757:INFO:None
2025-06-09 22:07:09,757:INFO:Set up data.
2025-06-09 22:07:09,774:INFO:Set up folding strategy.
2025-06-09 22:07:09,774:INFO:Set up train/test split.
2025-06-09 22:07:09,774:INFO:Set up index.
2025-06-09 22:07:09,774:INFO:Assigning column types.
2025-06-09 22:07:09,790:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-09 22:07:09,790:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-09 22:07:09,790:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 22:07:09,807:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:07:09,906:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:09,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:07:09,973:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:09,973:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:09,973:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-09 22:07:09,990:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 22:07:09,990:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,090:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,156:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:10,156:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:10,156:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-09 22:07:10,173:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,173:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,273:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,341:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:10,341:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:10,358:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,358:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,506:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:10,523:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:10,523:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-09 22:07:10,543:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,639:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,689:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:10,706:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:10,722:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,806:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,873:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:07:10,873:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:10,873:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:10,873:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-09 22:07:10,973:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:11,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:07:11,039:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:11,039:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:11,140:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:11,206:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:07:11,206:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:11,206:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:11,206:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-09 22:07:11,307:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:11,375:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:11,375:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:11,475:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:07:11,540:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:11,558:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:11,559:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-09 22:07:11,733:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:11,737:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:11,911:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:11,915:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:11,918:INFO:Preparing preprocessing pipeline...
2025-06-09 22:07:11,918:INFO:Set up simple imputation.
2025-06-09 22:07:11,923:INFO:Set up encoding of ordinal features.
2025-06-09 22:07:11,925:INFO:Set up encoding of categorical features.
2025-06-09 22:07:11,926:INFO:Set up column name cleaning.
2025-06-09 22:07:12,014:INFO:Finished creating preprocessing pipeline.
2025-06-09 22:07:12,045:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Mateusz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-06-09 22:07:12,045:INFO:Creating final display dataframe.
2025-06-09 22:07:12,256:INFO:Setup _display_container:                     Description             Value
0                    Session id                33
1                        Target              Czas
2                   Target type        Regression
3           Original data shape        (17687, 4)
4        Transformed data shape        (17687, 4)
5   Transformed train set shape        (12380, 4)
6    Transformed test set shape         (5307, 4)
7              Numeric features                 2
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              1cd6
2025-06-09 22:07:12,501:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:12,505:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:12,656:INFO:Soft dependency imported: xgboost: 2.1.1
2025-06-09 22:07:12,672:INFO:Soft dependency imported: catboost: 1.2.3
2025-06-09 22:07:12,672:INFO:setup() successfully completed in 2.93s...............
2025-06-09 22:08:48,231:INFO:Initializing compare_models()
2025-06-09 22:08:48,231:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-06-09 22:08:48,231:INFO:Checking exceptions
2025-06-09 22:08:48,239:INFO:Preparing display monitor
2025-06-09 22:08:48,270:INFO:Initializing Linear Regression
2025-06-09 22:08:48,270:INFO:Total runtime is 0.0 minutes
2025-06-09 22:08:48,276:INFO:SubProcess create_model() called ==================================
2025-06-09 22:08:48,277:INFO:Initializing create_model()
2025-06-09 22:08:48,277:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:08:48,278:INFO:Checking exceptions
2025-06-09 22:08:48,278:INFO:Importing libraries
2025-06-09 22:08:48,278:INFO:Copying training dataset
2025-06-09 22:08:48,291:INFO:Defining folds
2025-06-09 22:08:48,291:INFO:Declaring metric variables
2025-06-09 22:08:48,297:INFO:Importing untrained model
2025-06-09 22:08:48,307:INFO:Linear Regression Imported successfully
2025-06-09 22:08:48,321:INFO:Starting cross validation
2025-06-09 22:08:48,326:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:08:55,804:INFO:Calculating mean and std
2025-06-09 22:08:55,804:INFO:Creating metrics dataframe
2025-06-09 22:08:55,804:INFO:Uploading results into container
2025-06-09 22:08:55,804:INFO:Uploading model into container now
2025-06-09 22:08:55,804:INFO:_master_model_container: 1
2025-06-09 22:08:55,804:INFO:_display_container: 2
2025-06-09 22:08:55,804:INFO:LinearRegression(n_jobs=-1)
2025-06-09 22:08:55,804:INFO:create_model() successfully completed......................................
2025-06-09 22:08:55,988:INFO:SubProcess create_model() end ==================================
2025-06-09 22:08:55,988:INFO:Creating metrics dataframe
2025-06-09 22:08:56,005:INFO:Initializing Lasso Regression
2025-06-09 22:08:56,005:INFO:Total runtime is 0.12890628576278687 minutes
2025-06-09 22:08:56,005:INFO:SubProcess create_model() called ==================================
2025-06-09 22:08:56,005:INFO:Initializing create_model()
2025-06-09 22:08:56,005:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:08:56,005:INFO:Checking exceptions
2025-06-09 22:08:56,005:INFO:Importing libraries
2025-06-09 22:08:56,005:INFO:Copying training dataset
2025-06-09 22:08:56,024:INFO:Defining folds
2025-06-09 22:08:56,025:INFO:Declaring metric variables
2025-06-09 22:08:56,029:INFO:Importing untrained model
2025-06-09 22:08:56,039:INFO:Lasso Regression Imported successfully
2025-06-09 22:08:56,040:INFO:Starting cross validation
2025-06-09 22:08:56,040:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:08:56,320:INFO:Calculating mean and std
2025-06-09 22:08:56,320:INFO:Creating metrics dataframe
2025-06-09 22:08:56,320:INFO:Uploading results into container
2025-06-09 22:08:56,320:INFO:Uploading model into container now
2025-06-09 22:08:56,320:INFO:_master_model_container: 2
2025-06-09 22:08:56,320:INFO:_display_container: 2
2025-06-09 22:08:56,320:INFO:Lasso(random_state=33)
2025-06-09 22:08:56,320:INFO:create_model() successfully completed......................................
2025-06-09 22:08:56,498:INFO:SubProcess create_model() end ==================================
2025-06-09 22:08:56,498:INFO:Creating metrics dataframe
2025-06-09 22:08:56,511:INFO:Initializing Ridge Regression
2025-06-09 22:08:56,511:INFO:Total runtime is 0.13733550707499187 minutes
2025-06-09 22:08:56,512:INFO:SubProcess create_model() called ==================================
2025-06-09 22:08:56,512:INFO:Initializing create_model()
2025-06-09 22:08:56,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:08:56,512:INFO:Checking exceptions
2025-06-09 22:08:56,512:INFO:Importing libraries
2025-06-09 22:08:56,512:INFO:Copying training dataset
2025-06-09 22:08:56,522:INFO:Defining folds
2025-06-09 22:08:56,522:INFO:Declaring metric variables
2025-06-09 22:08:56,522:INFO:Importing untrained model
2025-06-09 22:08:56,543:INFO:Ridge Regression Imported successfully
2025-06-09 22:08:56,558:INFO:Starting cross validation
2025-06-09 22:08:56,560:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:08:56,821:INFO:Calculating mean and std
2025-06-09 22:08:56,821:INFO:Creating metrics dataframe
2025-06-09 22:08:56,821:INFO:Uploading results into container
2025-06-09 22:08:56,821:INFO:Uploading model into container now
2025-06-09 22:08:56,821:INFO:_master_model_container: 3
2025-06-09 22:08:56,821:INFO:_display_container: 2
2025-06-09 22:08:56,821:INFO:Ridge(random_state=33)
2025-06-09 22:08:56,832:INFO:create_model() successfully completed......................................
2025-06-09 22:08:56,999:INFO:SubProcess create_model() end ==================================
2025-06-09 22:08:56,999:INFO:Creating metrics dataframe
2025-06-09 22:08:56,999:INFO:Initializing Elastic Net
2025-06-09 22:08:56,999:INFO:Total runtime is 0.1454792022705078 minutes
2025-06-09 22:08:57,016:INFO:SubProcess create_model() called ==================================
2025-06-09 22:08:57,017:INFO:Initializing create_model()
2025-06-09 22:08:57,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:08:57,017:INFO:Checking exceptions
2025-06-09 22:08:57,017:INFO:Importing libraries
2025-06-09 22:08:57,017:INFO:Copying training dataset
2025-06-09 22:08:57,027:INFO:Defining folds
2025-06-09 22:08:57,028:INFO:Declaring metric variables
2025-06-09 22:08:57,032:INFO:Importing untrained model
2025-06-09 22:08:57,041:INFO:Elastic Net Imported successfully
2025-06-09 22:08:57,041:INFO:Starting cross validation
2025-06-09 22:08:57,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:08:57,315:INFO:Calculating mean and std
2025-06-09 22:08:57,315:INFO:Creating metrics dataframe
2025-06-09 22:08:57,315:INFO:Uploading results into container
2025-06-09 22:08:57,315:INFO:Uploading model into container now
2025-06-09 22:08:57,315:INFO:_master_model_container: 4
2025-06-09 22:08:57,315:INFO:_display_container: 2
2025-06-09 22:08:57,315:INFO:ElasticNet(random_state=33)
2025-06-09 22:08:57,331:INFO:create_model() successfully completed......................................
2025-06-09 22:08:57,501:INFO:SubProcess create_model() end ==================================
2025-06-09 22:08:57,501:INFO:Creating metrics dataframe
2025-06-09 22:08:57,501:INFO:Initializing Least Angle Regression
2025-06-09 22:08:57,501:INFO:Total runtime is 0.15383548339207967 minutes
2025-06-09 22:08:57,516:INFO:SubProcess create_model() called ==================================
2025-06-09 22:08:57,526:INFO:Initializing create_model()
2025-06-09 22:08:57,526:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:08:57,526:INFO:Checking exceptions
2025-06-09 22:08:57,526:INFO:Importing libraries
2025-06-09 22:08:57,526:INFO:Copying training dataset
2025-06-09 22:08:57,526:INFO:Defining folds
2025-06-09 22:08:57,526:INFO:Declaring metric variables
2025-06-09 22:08:57,536:INFO:Importing untrained model
2025-06-09 22:08:57,536:INFO:Least Angle Regression Imported successfully
2025-06-09 22:08:57,557:INFO:Starting cross validation
2025-06-09 22:08:57,560:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:08:57,817:INFO:Calculating mean and std
2025-06-09 22:08:57,817:INFO:Creating metrics dataframe
2025-06-09 22:08:57,828:INFO:Uploading results into container
2025-06-09 22:08:57,829:INFO:Uploading model into container now
2025-06-09 22:08:57,829:INFO:_master_model_container: 5
2025-06-09 22:08:57,829:INFO:_display_container: 2
2025-06-09 22:08:57,829:INFO:Lars(random_state=33)
2025-06-09 22:08:57,829:INFO:create_model() successfully completed......................................
2025-06-09 22:08:58,001:INFO:SubProcess create_model() end ==================================
2025-06-09 22:08:58,001:INFO:Creating metrics dataframe
2025-06-09 22:08:58,013:INFO:Initializing Lasso Least Angle Regression
2025-06-09 22:08:58,013:INFO:Total runtime is 0.1623685836791992 minutes
2025-06-09 22:08:58,018:INFO:SubProcess create_model() called ==================================
2025-06-09 22:08:58,019:INFO:Initializing create_model()
2025-06-09 22:08:58,020:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:08:58,020:INFO:Checking exceptions
2025-06-09 22:08:58,020:INFO:Importing libraries
2025-06-09 22:08:58,020:INFO:Copying training dataset
2025-06-09 22:08:58,028:INFO:Defining folds
2025-06-09 22:08:58,029:INFO:Declaring metric variables
2025-06-09 22:08:58,035:INFO:Importing untrained model
2025-06-09 22:08:58,056:INFO:Lasso Least Angle Regression Imported successfully
2025-06-09 22:08:58,076:INFO:Starting cross validation
2025-06-09 22:08:58,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:08:58,440:INFO:Calculating mean and std
2025-06-09 22:08:58,441:INFO:Creating metrics dataframe
2025-06-09 22:08:58,444:INFO:Uploading results into container
2025-06-09 22:08:58,444:INFO:Uploading model into container now
2025-06-09 22:08:58,445:INFO:_master_model_container: 6
2025-06-09 22:08:58,446:INFO:_display_container: 2
2025-06-09 22:08:58,446:INFO:LassoLars(random_state=33)
2025-06-09 22:08:58,447:INFO:create_model() successfully completed......................................
2025-06-09 22:08:58,621:INFO:SubProcess create_model() end ==================================
2025-06-09 22:08:58,621:INFO:Creating metrics dataframe
2025-06-09 22:08:58,631:INFO:Initializing Orthogonal Matching Pursuit
2025-06-09 22:08:58,631:INFO:Total runtime is 0.17267913818359373 minutes
2025-06-09 22:08:58,636:INFO:SubProcess create_model() called ==================================
2025-06-09 22:08:58,638:INFO:Initializing create_model()
2025-06-09 22:08:58,638:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:08:58,638:INFO:Checking exceptions
2025-06-09 22:08:58,638:INFO:Importing libraries
2025-06-09 22:08:58,638:INFO:Copying training dataset
2025-06-09 22:08:58,646:INFO:Defining folds
2025-06-09 22:08:58,646:INFO:Declaring metric variables
2025-06-09 22:08:58,652:INFO:Importing untrained model
2025-06-09 22:08:58,654:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-09 22:08:58,672:INFO:Starting cross validation
2025-06-09 22:08:58,673:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:08:58,935:INFO:Calculating mean and std
2025-06-09 22:08:58,935:INFO:Creating metrics dataframe
2025-06-09 22:08:58,935:INFO:Uploading results into container
2025-06-09 22:08:58,935:INFO:Uploading model into container now
2025-06-09 22:08:58,935:INFO:_master_model_container: 7
2025-06-09 22:08:58,951:INFO:_display_container: 2
2025-06-09 22:08:58,952:INFO:OrthogonalMatchingPursuit()
2025-06-09 22:08:58,952:INFO:create_model() successfully completed......................................
2025-06-09 22:08:59,119:INFO:SubProcess create_model() end ==================================
2025-06-09 22:08:59,119:INFO:Creating metrics dataframe
2025-06-09 22:08:59,119:INFO:Initializing Bayesian Ridge
2025-06-09 22:08:59,119:INFO:Total runtime is 0.18080814679463703 minutes
2025-06-09 22:08:59,138:INFO:SubProcess create_model() called ==================================
2025-06-09 22:08:59,138:INFO:Initializing create_model()
2025-06-09 22:08:59,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:08:59,138:INFO:Checking exceptions
2025-06-09 22:08:59,138:INFO:Importing libraries
2025-06-09 22:08:59,138:INFO:Copying training dataset
2025-06-09 22:08:59,138:INFO:Defining folds
2025-06-09 22:08:59,138:INFO:Declaring metric variables
2025-06-09 22:08:59,153:INFO:Importing untrained model
2025-06-09 22:08:59,155:INFO:Bayesian Ridge Imported successfully
2025-06-09 22:08:59,171:INFO:Starting cross validation
2025-06-09 22:08:59,172:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:08:59,434:INFO:Calculating mean and std
2025-06-09 22:08:59,434:INFO:Creating metrics dataframe
2025-06-09 22:08:59,448:INFO:Uploading results into container
2025-06-09 22:08:59,448:INFO:Uploading model into container now
2025-06-09 22:08:59,448:INFO:_master_model_container: 8
2025-06-09 22:08:59,448:INFO:_display_container: 2
2025-06-09 22:08:59,448:INFO:BayesianRidge()
2025-06-09 22:08:59,448:INFO:create_model() successfully completed......................................
2025-06-09 22:08:59,615:INFO:SubProcess create_model() end ==================================
2025-06-09 22:08:59,615:INFO:Creating metrics dataframe
2025-06-09 22:08:59,615:INFO:Initializing Passive Aggressive Regressor
2025-06-09 22:08:59,615:INFO:Total runtime is 0.18908294439315795 minutes
2025-06-09 22:08:59,631:INFO:SubProcess create_model() called ==================================
2025-06-09 22:08:59,631:INFO:Initializing create_model()
2025-06-09 22:08:59,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:08:59,631:INFO:Checking exceptions
2025-06-09 22:08:59,631:INFO:Importing libraries
2025-06-09 22:08:59,631:INFO:Copying training dataset
2025-06-09 22:08:59,631:INFO:Defining folds
2025-06-09 22:08:59,631:INFO:Declaring metric variables
2025-06-09 22:08:59,650:INFO:Importing untrained model
2025-06-09 22:08:59,657:INFO:Passive Aggressive Regressor Imported successfully
2025-06-09 22:08:59,672:INFO:Starting cross validation
2025-06-09 22:08:59,673:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:08:59,971:INFO:Calculating mean and std
2025-06-09 22:08:59,971:INFO:Creating metrics dataframe
2025-06-09 22:08:59,971:INFO:Uploading results into container
2025-06-09 22:08:59,971:INFO:Uploading model into container now
2025-06-09 22:08:59,971:INFO:_master_model_container: 9
2025-06-09 22:08:59,971:INFO:_display_container: 2
2025-06-09 22:08:59,971:INFO:PassiveAggressiveRegressor(random_state=33)
2025-06-09 22:08:59,971:INFO:create_model() successfully completed......................................
2025-06-09 22:09:00,133:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:00,133:INFO:Creating metrics dataframe
2025-06-09 22:09:00,155:INFO:Initializing Huber Regressor
2025-06-09 22:09:00,155:INFO:Total runtime is 0.19807746013005573 minutes
2025-06-09 22:09:00,172:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:00,172:INFO:Initializing create_model()
2025-06-09 22:09:00,172:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:00,172:INFO:Checking exceptions
2025-06-09 22:09:00,172:INFO:Importing libraries
2025-06-09 22:09:00,172:INFO:Copying training dataset
2025-06-09 22:09:00,172:INFO:Defining folds
2025-06-09 22:09:00,172:INFO:Declaring metric variables
2025-06-09 22:09:00,185:INFO:Importing untrained model
2025-06-09 22:09:00,185:INFO:Huber Regressor Imported successfully
2025-06-09 22:09:00,207:INFO:Starting cross validation
2025-06-09 22:09:00,209:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:00,719:INFO:Calculating mean and std
2025-06-09 22:09:00,719:INFO:Creating metrics dataframe
2025-06-09 22:09:00,719:INFO:Uploading results into container
2025-06-09 22:09:00,719:INFO:Uploading model into container now
2025-06-09 22:09:00,734:INFO:_master_model_container: 10
2025-06-09 22:09:00,734:INFO:_display_container: 2
2025-06-09 22:09:00,736:INFO:HuberRegressor()
2025-06-09 22:09:00,736:INFO:create_model() successfully completed......................................
2025-06-09 22:09:00,893:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:00,893:INFO:Creating metrics dataframe
2025-06-09 22:09:00,920:INFO:Initializing K Neighbors Regressor
2025-06-09 22:09:00,921:INFO:Total runtime is 0.21084017356236773 minutes
2025-06-09 22:09:00,926:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:00,926:INFO:Initializing create_model()
2025-06-09 22:09:00,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:00,926:INFO:Checking exceptions
2025-06-09 22:09:00,926:INFO:Importing libraries
2025-06-09 22:09:00,926:INFO:Copying training dataset
2025-06-09 22:09:00,935:INFO:Defining folds
2025-06-09 22:09:00,935:INFO:Declaring metric variables
2025-06-09 22:09:00,935:INFO:Importing untrained model
2025-06-09 22:09:00,935:INFO:K Neighbors Regressor Imported successfully
2025-06-09 22:09:00,960:INFO:Starting cross validation
2025-06-09 22:09:00,961:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:01,358:INFO:Calculating mean and std
2025-06-09 22:09:01,368:INFO:Creating metrics dataframe
2025-06-09 22:09:01,370:INFO:Uploading results into container
2025-06-09 22:09:01,371:INFO:Uploading model into container now
2025-06-09 22:09:01,372:INFO:_master_model_container: 11
2025-06-09 22:09:01,372:INFO:_display_container: 2
2025-06-09 22:09:01,372:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-09 22:09:01,372:INFO:create_model() successfully completed......................................
2025-06-09 22:09:01,541:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:01,543:INFO:Creating metrics dataframe
2025-06-09 22:09:01,557:INFO:Initializing Decision Tree Regressor
2025-06-09 22:09:01,557:INFO:Total runtime is 0.22144310474395748 minutes
2025-06-09 22:09:01,562:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:01,562:INFO:Initializing create_model()
2025-06-09 22:09:01,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:01,563:INFO:Checking exceptions
2025-06-09 22:09:01,563:INFO:Importing libraries
2025-06-09 22:09:01,563:INFO:Copying training dataset
2025-06-09 22:09:01,572:INFO:Defining folds
2025-06-09 22:09:01,573:INFO:Declaring metric variables
2025-06-09 22:09:01,577:INFO:Importing untrained model
2025-06-09 22:09:01,584:INFO:Decision Tree Regressor Imported successfully
2025-06-09 22:09:01,591:INFO:Starting cross validation
2025-06-09 22:09:01,591:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:02,048:INFO:Calculating mean and std
2025-06-09 22:09:02,048:INFO:Creating metrics dataframe
2025-06-09 22:09:02,062:INFO:Uploading results into container
2025-06-09 22:09:02,062:INFO:Uploading model into container now
2025-06-09 22:09:02,062:INFO:_master_model_container: 12
2025-06-09 22:09:02,062:INFO:_display_container: 2
2025-06-09 22:09:02,062:INFO:DecisionTreeRegressor(random_state=33)
2025-06-09 22:09:02,062:INFO:create_model() successfully completed......................................
2025-06-09 22:09:02,233:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:02,234:INFO:Creating metrics dataframe
2025-06-09 22:09:02,246:INFO:Initializing Random Forest Regressor
2025-06-09 22:09:02,246:INFO:Total runtime is 0.23292483886082962 minutes
2025-06-09 22:09:02,250:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:02,250:INFO:Initializing create_model()
2025-06-09 22:09:02,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:02,252:INFO:Checking exceptions
2025-06-09 22:09:02,252:INFO:Importing libraries
2025-06-09 22:09:02,252:INFO:Copying training dataset
2025-06-09 22:09:02,260:INFO:Defining folds
2025-06-09 22:09:02,260:INFO:Declaring metric variables
2025-06-09 22:09:02,264:INFO:Importing untrained model
2025-06-09 22:09:02,271:INFO:Random Forest Regressor Imported successfully
2025-06-09 22:09:02,302:INFO:Starting cross validation
2025-06-09 22:09:02,303:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:10,967:INFO:Calculating mean and std
2025-06-09 22:09:10,967:INFO:Creating metrics dataframe
2025-06-09 22:09:10,983:INFO:Uploading results into container
2025-06-09 22:09:10,983:INFO:Uploading model into container now
2025-06-09 22:09:10,985:INFO:_master_model_container: 13
2025-06-09 22:09:10,985:INFO:_display_container: 2
2025-06-09 22:09:10,987:INFO:RandomForestRegressor(n_jobs=-1, random_state=33)
2025-06-09 22:09:10,987:INFO:create_model() successfully completed......................................
2025-06-09 22:09:11,180:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:11,180:INFO:Creating metrics dataframe
2025-06-09 22:09:11,193:INFO:Initializing Extra Trees Regressor
2025-06-09 22:09:11,194:INFO:Total runtime is 0.3820429762204488 minutes
2025-06-09 22:09:11,198:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:11,198:INFO:Initializing create_model()
2025-06-09 22:09:11,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:11,198:INFO:Checking exceptions
2025-06-09 22:09:11,198:INFO:Importing libraries
2025-06-09 22:09:11,198:INFO:Copying training dataset
2025-06-09 22:09:11,198:INFO:Defining folds
2025-06-09 22:09:11,198:INFO:Declaring metric variables
2025-06-09 22:09:11,198:INFO:Importing untrained model
2025-06-09 22:09:11,216:INFO:Extra Trees Regressor Imported successfully
2025-06-09 22:09:11,216:INFO:Starting cross validation
2025-06-09 22:09:11,232:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:17,428:INFO:Calculating mean and std
2025-06-09 22:09:17,428:INFO:Creating metrics dataframe
2025-06-09 22:09:17,428:INFO:Uploading results into container
2025-06-09 22:09:17,428:INFO:Uploading model into container now
2025-06-09 22:09:17,428:INFO:_master_model_container: 14
2025-06-09 22:09:17,428:INFO:_display_container: 2
2025-06-09 22:09:17,443:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=33)
2025-06-09 22:09:17,443:INFO:create_model() successfully completed......................................
2025-06-09 22:09:17,618:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:17,619:INFO:Creating metrics dataframe
2025-06-09 22:09:17,629:INFO:Initializing AdaBoost Regressor
2025-06-09 22:09:17,629:INFO:Total runtime is 0.48930807908376056 minutes
2025-06-09 22:09:17,629:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:17,629:INFO:Initializing create_model()
2025-06-09 22:09:17,629:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:17,629:INFO:Checking exceptions
2025-06-09 22:09:17,629:INFO:Importing libraries
2025-06-09 22:09:17,629:INFO:Copying training dataset
2025-06-09 22:09:17,645:INFO:Defining folds
2025-06-09 22:09:17,645:INFO:Declaring metric variables
2025-06-09 22:09:17,650:INFO:Importing untrained model
2025-06-09 22:09:17,650:INFO:AdaBoost Regressor Imported successfully
2025-06-09 22:09:17,670:INFO:Starting cross validation
2025-06-09 22:09:17,670:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:19,112:INFO:Calculating mean and std
2025-06-09 22:09:19,128:INFO:Creating metrics dataframe
2025-06-09 22:09:19,129:INFO:Uploading results into container
2025-06-09 22:09:19,129:INFO:Uploading model into container now
2025-06-09 22:09:19,129:INFO:_master_model_container: 15
2025-06-09 22:09:19,129:INFO:_display_container: 2
2025-06-09 22:09:19,129:INFO:AdaBoostRegressor(random_state=33)
2025-06-09 22:09:19,129:INFO:create_model() successfully completed......................................
2025-06-09 22:09:19,295:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:19,295:INFO:Creating metrics dataframe
2025-06-09 22:09:19,311:INFO:Initializing Gradient Boosting Regressor
2025-06-09 22:09:19,311:INFO:Total runtime is 0.5173500140508016 minutes
2025-06-09 22:09:19,313:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:19,313:INFO:Initializing create_model()
2025-06-09 22:09:19,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:19,313:INFO:Checking exceptions
2025-06-09 22:09:19,313:INFO:Importing libraries
2025-06-09 22:09:19,313:INFO:Copying training dataset
2025-06-09 22:09:19,313:INFO:Defining folds
2025-06-09 22:09:19,313:INFO:Declaring metric variables
2025-06-09 22:09:19,331:INFO:Importing untrained model
2025-06-09 22:09:19,331:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:09:19,354:INFO:Starting cross validation
2025-06-09 22:09:19,356:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:21,778:INFO:Calculating mean and std
2025-06-09 22:09:21,778:INFO:Creating metrics dataframe
2025-06-09 22:09:21,778:INFO:Uploading results into container
2025-06-09 22:09:21,778:INFO:Uploading model into container now
2025-06-09 22:09:21,778:INFO:_master_model_container: 16
2025-06-09 22:09:21,778:INFO:_display_container: 2
2025-06-09 22:09:21,778:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:09:21,778:INFO:create_model() successfully completed......................................
2025-06-09 22:09:21,946:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:21,946:INFO:Creating metrics dataframe
2025-06-09 22:09:21,962:INFO:Initializing Extreme Gradient Boosting
2025-06-09 22:09:21,962:INFO:Total runtime is 0.5615307172139485 minutes
2025-06-09 22:09:21,962:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:21,962:INFO:Initializing create_model()
2025-06-09 22:09:21,962:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:21,962:INFO:Checking exceptions
2025-06-09 22:09:21,962:INFO:Importing libraries
2025-06-09 22:09:21,962:INFO:Copying training dataset
2025-06-09 22:09:21,985:INFO:Defining folds
2025-06-09 22:09:21,986:INFO:Declaring metric variables
2025-06-09 22:09:21,990:INFO:Importing untrained model
2025-06-09 22:09:21,998:INFO:Extreme Gradient Boosting Imported successfully
2025-06-09 22:09:22,006:INFO:Starting cross validation
2025-06-09 22:09:22,011:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:22,818:INFO:Calculating mean and std
2025-06-09 22:09:22,819:INFO:Creating metrics dataframe
2025-06-09 22:09:22,821:INFO:Uploading results into container
2025-06-09 22:09:22,822:INFO:Uploading model into container now
2025-06-09 22:09:22,822:INFO:_master_model_container: 17
2025-06-09 22:09:22,822:INFO:_display_container: 2
2025-06-09 22:09:22,825:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=33, ...)
2025-06-09 22:09:22,826:INFO:create_model() successfully completed......................................
2025-06-09 22:09:23,007:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:23,008:INFO:Creating metrics dataframe
2025-06-09 22:09:23,023:INFO:Initializing Light Gradient Boosting Machine
2025-06-09 22:09:23,024:INFO:Total runtime is 0.5792122562726338 minutes
2025-06-09 22:09:23,030:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:23,031:INFO:Initializing create_model()
2025-06-09 22:09:23,031:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:23,031:INFO:Checking exceptions
2025-06-09 22:09:23,031:INFO:Importing libraries
2025-06-09 22:09:23,031:INFO:Copying training dataset
2025-06-09 22:09:23,041:INFO:Defining folds
2025-06-09 22:09:23,041:INFO:Declaring metric variables
2025-06-09 22:09:23,047:INFO:Importing untrained model
2025-06-09 22:09:23,056:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-09 22:09:23,068:INFO:Starting cross validation
2025-06-09 22:09:23,070:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:24,410:INFO:Calculating mean and std
2025-06-09 22:09:24,410:INFO:Creating metrics dataframe
2025-06-09 22:09:24,410:INFO:Uploading results into container
2025-06-09 22:09:24,410:INFO:Uploading model into container now
2025-06-09 22:09:24,410:INFO:_master_model_container: 18
2025-06-09 22:09:24,421:INFO:_display_container: 2
2025-06-09 22:09:24,422:INFO:LGBMRegressor(n_jobs=-1, random_state=33)
2025-06-09 22:09:24,422:INFO:create_model() successfully completed......................................
2025-06-09 22:09:24,625:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:24,626:INFO:Creating metrics dataframe
2025-06-09 22:09:24,628:INFO:Initializing CatBoost Regressor
2025-06-09 22:09:24,628:INFO:Total runtime is 0.605964171886444 minutes
2025-06-09 22:09:24,644:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:24,644:INFO:Initializing create_model()
2025-06-09 22:09:24,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:24,644:INFO:Checking exceptions
2025-06-09 22:09:24,644:INFO:Importing libraries
2025-06-09 22:09:24,644:INFO:Copying training dataset
2025-06-09 22:09:24,644:INFO:Defining folds
2025-06-09 22:09:24,644:INFO:Declaring metric variables
2025-06-09 22:09:24,661:INFO:Importing untrained model
2025-06-09 22:09:24,664:INFO:CatBoost Regressor Imported successfully
2025-06-09 22:09:24,677:INFO:Starting cross validation
2025-06-09 22:09:24,679:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:40,288:INFO:Calculating mean and std
2025-06-09 22:09:40,288:INFO:Creating metrics dataframe
2025-06-09 22:09:40,288:INFO:Uploading results into container
2025-06-09 22:09:40,288:INFO:Uploading model into container now
2025-06-09 22:09:40,288:INFO:_master_model_container: 19
2025-06-09 22:09:40,288:INFO:_display_container: 2
2025-06-09 22:09:40,288:INFO:<catboost.core.CatBoostRegressor object at 0x0000025F9A5ECD90>
2025-06-09 22:09:40,288:INFO:create_model() successfully completed......................................
2025-06-09 22:09:40,477:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:40,477:INFO:Creating metrics dataframe
2025-06-09 22:09:40,488:INFO:Initializing Dummy Regressor
2025-06-09 22:09:40,488:INFO:Total runtime is 0.8702906847000121 minutes
2025-06-09 22:09:40,488:INFO:SubProcess create_model() called ==================================
2025-06-09 22:09:40,488:INFO:Initializing create_model()
2025-06-09 22:09:40,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F87CA6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:40,488:INFO:Checking exceptions
2025-06-09 22:09:40,488:INFO:Importing libraries
2025-06-09 22:09:40,488:INFO:Copying training dataset
2025-06-09 22:09:40,508:INFO:Defining folds
2025-06-09 22:09:40,508:INFO:Declaring metric variables
2025-06-09 22:09:40,514:INFO:Importing untrained model
2025-06-09 22:09:40,520:INFO:Dummy Regressor Imported successfully
2025-06-09 22:09:40,525:INFO:Starting cross validation
2025-06-09 22:09:40,525:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:09:40,821:INFO:Calculating mean and std
2025-06-09 22:09:40,821:INFO:Creating metrics dataframe
2025-06-09 22:09:40,821:INFO:Uploading results into container
2025-06-09 22:09:40,821:INFO:Uploading model into container now
2025-06-09 22:09:40,821:INFO:_master_model_container: 20
2025-06-09 22:09:40,821:INFO:_display_container: 2
2025-06-09 22:09:40,837:INFO:DummyRegressor()
2025-06-09 22:09:40,837:INFO:create_model() successfully completed......................................
2025-06-09 22:09:41,004:INFO:SubProcess create_model() end ==================================
2025-06-09 22:09:41,004:INFO:Creating metrics dataframe
2025-06-09 22:09:41,020:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-06-09 22:09:41,043:INFO:Initializing create_model()
2025-06-09 22:09:41,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:09:41,043:INFO:Checking exceptions
2025-06-09 22:09:41,043:INFO:Importing libraries
2025-06-09 22:09:41,043:INFO:Copying training dataset
2025-06-09 22:09:41,056:INFO:Defining folds
2025-06-09 22:09:41,056:INFO:Declaring metric variables
2025-06-09 22:09:41,056:INFO:Importing untrained model
2025-06-09 22:09:41,056:INFO:Declaring custom model
2025-06-09 22:09:41,057:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:09:41,060:INFO:Cross validation set to False
2025-06-09 22:09:41,060:INFO:Fitting Model
2025-06-09 22:09:41,837:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:09:41,837:INFO:create_model() successfully completed......................................
2025-06-09 22:09:42,058:INFO:_master_model_container: 20
2025-06-09 22:09:42,058:INFO:_display_container: 2
2025-06-09 22:09:42,058:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:09:42,058:INFO:compare_models() successfully completed......................................
2025-06-09 22:17:07,496:INFO:Initializing plot_model()
2025-06-09 22:17:07,496:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-06-09 22:17:07,496:INFO:Checking exceptions
2025-06-09 22:17:07,502:INFO:Preloading libraries
2025-06-09 22:17:07,519:INFO:Copying training dataset
2025-06-09 22:17:07,519:INFO:Plot type: error
2025-06-09 22:17:08,235:INFO:Fitting Model
2025-06-09 22:17:08,263:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingRegressor was fitted with feature names
  warnings.warn(

2025-06-09 22:17:08,263:INFO:Scoring test/hold-out set
2025-06-09 22:17:08,968:INFO:Visual Rendered Successfully
2025-06-09 22:17:09,136:INFO:plot_model() successfully completed......................................
2025-06-09 22:17:15,771:INFO:Initializing plot_model()
2025-06-09 22:17:15,771:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F9B42BA10>, estimator=GradientBoostingRegressor(random_state=33), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-06-09 22:17:15,771:INFO:Checking exceptions
2025-06-09 22:17:15,778:INFO:Preloading libraries
2025-06-09 22:17:15,789:INFO:Copying training dataset
2025-06-09 22:17:15,789:INFO:Plot type: error
2025-06-09 22:17:16,000:INFO:Fitting Model
2025-06-09 22:17:16,000:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingRegressor was fitted with feature names
  warnings.warn(

2025-06-09 22:17:16,015:INFO:Scoring test/hold-out set
2025-06-09 22:17:16,451:INFO:Visual Rendered Successfully
2025-06-09 22:17:16,641:INFO:plot_model() successfully completed......................................
2025-06-09 22:33:57,715:INFO:Initializing tune_model()
2025-06-09 22:33:57,715:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=None, round=4, n_iter=50, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-06-09 22:33:57,715:INFO:Checking exceptions
2025-06-09 22:33:57,745:INFO:Copying training dataset
2025-06-09 22:33:57,751:INFO:Checking base model
2025-06-09 22:33:57,751:INFO:Base model : Gradient Boosting Regressor
2025-06-09 22:33:57,760:INFO:Declaring metric variables
2025-06-09 22:33:57,767:INFO:Defining Hyperparameters
2025-06-09 22:33:58,079:INFO:Tuning with n_jobs=-1
2025-06-09 22:33:58,080:INFO:Initializing RandomizedSearchCV
2025-06-09 22:36:55,569:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 3, 'actual_estimator__learning_rate': 0.1}
2025-06-09 22:36:55,569:INFO:Hyperparameter search completed
2025-06-09 22:36:55,569:INFO:SubProcess create_model() called ==================================
2025-06-09 22:36:55,569:INFO:Initializing create_model()
2025-06-09 22:36:55,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F91AF6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.9, 'n_estimators': 140, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 3, 'learning_rate': 0.1})
2025-06-09 22:36:55,569:INFO:Checking exceptions
2025-06-09 22:36:55,569:INFO:Importing libraries
2025-06-09 22:36:55,569:INFO:Copying training dataset
2025-06-09 22:36:55,587:INFO:Defining folds
2025-06-09 22:36:55,587:INFO:Declaring metric variables
2025-06-09 22:36:55,591:INFO:Importing untrained model
2025-06-09 22:36:55,591:INFO:Declaring custom model
2025-06-09 22:36:55,598:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:36:55,609:INFO:Starting cross validation
2025-06-09 22:36:55,612:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:36:59,204:INFO:Calculating mean and std
2025-06-09 22:36:59,204:INFO:Creating metrics dataframe
2025-06-09 22:36:59,214:INFO:Finalizing model
2025-06-09 22:37:00,382:INFO:Uploading results into container
2025-06-09 22:37:00,383:INFO:Uploading model into container now
2025-06-09 22:37:00,383:INFO:_master_model_container: 22
2025-06-09 22:37:00,383:INFO:_display_container: 3
2025-06-09 22:37:00,384:INFO:GradientBoostingRegressor(max_features=1.0, min_impurity_decrease=0.01,
                          min_samples_leaf=5, min_samples_split=7,
                          n_estimators=140, random_state=33, subsample=0.9)
2025-06-09 22:37:00,385:INFO:create_model() successfully completed......................................
2025-06-09 22:37:00,580:INFO:SubProcess create_model() end ==================================
2025-06-09 22:37:00,580:INFO:choose_better activated
2025-06-09 22:37:00,584:INFO:SubProcess create_model() called ==================================
2025-06-09 22:37:00,585:INFO:Initializing create_model()
2025-06-09 22:37:00,585:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:37:00,585:INFO:Checking exceptions
2025-06-09 22:37:00,587:INFO:Importing libraries
2025-06-09 22:37:00,587:INFO:Copying training dataset
2025-06-09 22:37:00,596:INFO:Defining folds
2025-06-09 22:37:00,597:INFO:Declaring metric variables
2025-06-09 22:37:00,597:INFO:Importing untrained model
2025-06-09 22:37:00,597:INFO:Declaring custom model
2025-06-09 22:37:00,598:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:37:00,598:INFO:Starting cross validation
2025-06-09 22:37:00,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:37:03,137:INFO:Calculating mean and std
2025-06-09 22:37:03,138:INFO:Creating metrics dataframe
2025-06-09 22:37:03,140:INFO:Finalizing model
2025-06-09 22:37:03,976:INFO:Uploading results into container
2025-06-09 22:37:03,977:INFO:Uploading model into container now
2025-06-09 22:37:03,978:INFO:_master_model_container: 23
2025-06-09 22:37:03,978:INFO:_display_container: 4
2025-06-09 22:37:03,978:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:37:03,978:INFO:create_model() successfully completed......................................
2025-06-09 22:37:04,155:INFO:SubProcess create_model() end ==================================
2025-06-09 22:37:04,156:INFO:GradientBoostingRegressor(random_state=33) result for R2 is 0.8827
2025-06-09 22:37:04,157:INFO:GradientBoostingRegressor(max_features=1.0, min_impurity_decrease=0.01,
                          min_samples_leaf=5, min_samples_split=7,
                          n_estimators=140, random_state=33, subsample=0.9) result for R2 is 0.8821
2025-06-09 22:37:04,157:INFO:GradientBoostingRegressor(random_state=33) is best model
2025-06-09 22:37:04,157:INFO:choose_better completed
2025-06-09 22:37:04,158:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-06-09 22:37:04,169:INFO:_master_model_container: 23
2025-06-09 22:37:04,174:INFO:_display_container: 3
2025-06-09 22:37:04,174:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:37:04,175:INFO:tune_model() successfully completed......................................
2025-06-09 22:40:03,598:INFO:Initializing tune_model()
2025-06-09 22:40:03,598:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=None, round=4, n_iter=50, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-06-09 22:40:03,598:INFO:Checking exceptions
2025-06-09 22:40:03,613:INFO:Copying training dataset
2025-06-09 22:40:03,630:INFO:Checking base model
2025-06-09 22:40:03,630:INFO:Base model : Gradient Boosting Regressor
2025-06-09 22:40:03,648:INFO:Declaring metric variables
2025-06-09 22:40:03,653:INFO:Defining Hyperparameters
2025-06-09 22:40:03,963:INFO:Tuning with n_jobs=-1
2025-06-09 22:40:03,963:INFO:Initializing RandomizedSearchCV
2025-06-09 22:43:05,817:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 3, 'actual_estimator__learning_rate': 0.1}
2025-06-09 22:43:05,819:INFO:Hyperparameter search completed
2025-06-09 22:43:05,820:INFO:SubProcess create_model() called ==================================
2025-06-09 22:43:05,820:INFO:Initializing create_model()
2025-06-09 22:43:05,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99084D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.9, 'n_estimators': 140, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 3, 'learning_rate': 0.1})
2025-06-09 22:43:05,822:INFO:Checking exceptions
2025-06-09 22:43:05,822:INFO:Importing libraries
2025-06-09 22:43:05,823:INFO:Copying training dataset
2025-06-09 22:43:05,833:INFO:Defining folds
2025-06-09 22:43:05,833:INFO:Declaring metric variables
2025-06-09 22:43:05,839:INFO:Importing untrained model
2025-06-09 22:43:05,839:INFO:Declaring custom model
2025-06-09 22:43:05,845:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:43:05,858:INFO:Starting cross validation
2025-06-09 22:43:05,860:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:43:09,662:INFO:Calculating mean and std
2025-06-09 22:43:09,662:INFO:Creating metrics dataframe
2025-06-09 22:43:09,671:INFO:Finalizing model
2025-06-09 22:43:10,877:INFO:Uploading results into container
2025-06-09 22:43:10,879:INFO:Uploading model into container now
2025-06-09 22:43:10,880:INFO:_master_model_container: 24
2025-06-09 22:43:10,880:INFO:_display_container: 4
2025-06-09 22:43:10,881:INFO:GradientBoostingRegressor(max_features=1.0, min_impurity_decrease=0.01,
                          min_samples_leaf=5, min_samples_split=7,
                          n_estimators=140, random_state=33, subsample=0.9)
2025-06-09 22:43:10,881:INFO:create_model() successfully completed......................................
2025-06-09 22:43:11,099:INFO:SubProcess create_model() end ==================================
2025-06-09 22:43:11,099:INFO:choose_better activated
2025-06-09 22:43:11,103:INFO:SubProcess create_model() called ==================================
2025-06-09 22:43:11,104:INFO:Initializing create_model()
2025-06-09 22:43:11,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:43:11,104:INFO:Checking exceptions
2025-06-09 22:43:11,107:INFO:Importing libraries
2025-06-09 22:43:11,107:INFO:Copying training dataset
2025-06-09 22:43:11,115:INFO:Defining folds
2025-06-09 22:43:11,115:INFO:Declaring metric variables
2025-06-09 22:43:11,115:INFO:Importing untrained model
2025-06-09 22:43:11,115:INFO:Declaring custom model
2025-06-09 22:43:11,115:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:43:11,115:INFO:Starting cross validation
2025-06-09 22:43:11,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:43:14,065:INFO:Calculating mean and std
2025-06-09 22:43:14,066:INFO:Creating metrics dataframe
2025-06-09 22:43:14,068:INFO:Finalizing model
2025-06-09 22:43:15,041:INFO:Uploading results into container
2025-06-09 22:43:15,042:INFO:Uploading model into container now
2025-06-09 22:43:15,042:INFO:_master_model_container: 25
2025-06-09 22:43:15,042:INFO:_display_container: 5
2025-06-09 22:43:15,043:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:43:15,043:INFO:create_model() successfully completed......................................
2025-06-09 22:43:15,238:INFO:SubProcess create_model() end ==================================
2025-06-09 22:43:15,238:INFO:GradientBoostingRegressor(random_state=33) result for R2 is 0.8827
2025-06-09 22:43:15,239:INFO:GradientBoostingRegressor(max_features=1.0, min_impurity_decrease=0.01,
                          min_samples_leaf=5, min_samples_split=7,
                          n_estimators=140, random_state=33, subsample=0.9) result for R2 is 0.8821
2025-06-09 22:43:15,240:INFO:GradientBoostingRegressor(random_state=33) is best model
2025-06-09 22:43:15,240:INFO:choose_better completed
2025-06-09 22:43:15,240:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-06-09 22:43:15,256:INFO:_master_model_container: 25
2025-06-09 22:43:15,256:INFO:_display_container: 4
2025-06-09 22:43:15,257:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:43:15,257:INFO:tune_model() successfully completed......................................
2025-06-09 22:45:47,776:INFO:Initializing compare_models()
2025-06-09 22:45:47,776:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, include=[GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, 'include': [GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-06-09 22:45:47,776:INFO:Checking exceptions
2025-06-09 22:45:47,781:INFO:Preparing display monitor
2025-06-09 22:45:47,815:INFO:Initializing custom model Gradient Boosting Regressor
2025-06-09 22:45:47,816:INFO:Total runtime is 3.324747085571289e-05 minutes
2025-06-09 22:45:47,822:INFO:SubProcess create_model() called ==================================
2025-06-09 22:45:47,823:INFO:Initializing create_model()
2025-06-09 22:45:47,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F96726FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:45:47,823:INFO:Checking exceptions
2025-06-09 22:45:47,823:INFO:Importing libraries
2025-06-09 22:45:47,823:INFO:Copying training dataset
2025-06-09 22:45:47,840:INFO:Defining folds
2025-06-09 22:45:47,840:INFO:Declaring metric variables
2025-06-09 22:45:47,847:INFO:Importing untrained model
2025-06-09 22:45:47,847:INFO:Declaring custom model
2025-06-09 22:45:47,854:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:45:47,866:INFO:Starting cross validation
2025-06-09 22:45:47,867:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:45:50,767:INFO:Calculating mean and std
2025-06-09 22:45:50,767:INFO:Creating metrics dataframe
2025-06-09 22:45:50,767:INFO:Uploading results into container
2025-06-09 22:45:50,767:INFO:Uploading model into container now
2025-06-09 22:45:50,767:INFO:_master_model_container: 26
2025-06-09 22:45:50,767:INFO:_display_container: 5
2025-06-09 22:45:50,767:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:45:50,774:INFO:create_model() successfully completed......................................
2025-06-09 22:45:50,950:INFO:SubProcess create_model() end ==================================
2025-06-09 22:45:50,951:INFO:Creating metrics dataframe
2025-06-09 22:45:50,959:INFO:Initializing custom model Gradient Boosting Regressor
2025-06-09 22:45:50,959:INFO:Total runtime is 0.05240801175435384 minutes
2025-06-09 22:45:50,964:INFO:SubProcess create_model() called ==================================
2025-06-09 22:45:50,965:INFO:Initializing create_model()
2025-06-09 22:45:50,965:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F96726FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:45:50,965:INFO:Checking exceptions
2025-06-09 22:45:50,965:INFO:Importing libraries
2025-06-09 22:45:50,965:INFO:Copying training dataset
2025-06-09 22:45:50,974:INFO:Defining folds
2025-06-09 22:45:50,974:INFO:Declaring metric variables
2025-06-09 22:45:50,981:INFO:Importing untrained model
2025-06-09 22:45:50,981:INFO:Declaring custom model
2025-06-09 22:45:50,988:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:45:51,000:INFO:Starting cross validation
2025-06-09 22:45:51,000:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:45:53,424:INFO:Calculating mean and std
2025-06-09 22:45:53,440:INFO:Creating metrics dataframe
2025-06-09 22:45:53,440:INFO:Uploading results into container
2025-06-09 22:45:53,440:INFO:Uploading model into container now
2025-06-09 22:45:53,440:INFO:_master_model_container: 27
2025-06-09 22:45:53,440:INFO:_display_container: 5
2025-06-09 22:45:53,440:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:45:53,440:INFO:create_model() successfully completed......................................
2025-06-09 22:45:53,625:INFO:SubProcess create_model() end ==================================
2025-06-09 22:45:53,626:INFO:Creating metrics dataframe
2025-06-09 22:45:53,631:INFO:Initializing custom model Gradient Boosting Regressor
2025-06-09 22:45:53,631:INFO:Total runtime is 0.09694370031356811 minutes
2025-06-09 22:45:53,644:INFO:SubProcess create_model() called ==================================
2025-06-09 22:45:53,644:INFO:Initializing create_model()
2025-06-09 22:45:53,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F96726FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:45:53,644:INFO:Checking exceptions
2025-06-09 22:45:53,644:INFO:Importing libraries
2025-06-09 22:45:53,644:INFO:Copying training dataset
2025-06-09 22:45:53,644:INFO:Defining folds
2025-06-09 22:45:53,644:INFO:Declaring metric variables
2025-06-09 22:45:53,661:INFO:Importing untrained model
2025-06-09 22:45:53,661:INFO:Declaring custom model
2025-06-09 22:45:53,685:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:45:53,698:INFO:Starting cross validation
2025-06-09 22:45:53,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:45:56,193:INFO:Calculating mean and std
2025-06-09 22:45:56,193:INFO:Creating metrics dataframe
2025-06-09 22:45:56,193:INFO:Uploading results into container
2025-06-09 22:45:56,193:INFO:Uploading model into container now
2025-06-09 22:45:56,208:INFO:_master_model_container: 28
2025-06-09 22:45:56,208:INFO:_display_container: 5
2025-06-09 22:45:56,211:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:45:56,211:INFO:create_model() successfully completed......................................
2025-06-09 22:45:56,384:INFO:SubProcess create_model() end ==================================
2025-06-09 22:45:56,384:INFO:Creating metrics dataframe
2025-06-09 22:45:56,394:INFO:Initializing custom model Gradient Boosting Regressor
2025-06-09 22:45:56,395:INFO:Total runtime is 0.1430071274439494 minutes
2025-06-09 22:45:56,399:INFO:SubProcess create_model() called ==================================
2025-06-09 22:45:56,400:INFO:Initializing create_model()
2025-06-09 22:45:56,400:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F96726FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:45:56,400:INFO:Checking exceptions
2025-06-09 22:45:56,400:INFO:Importing libraries
2025-06-09 22:45:56,400:INFO:Copying training dataset
2025-06-09 22:45:56,410:INFO:Defining folds
2025-06-09 22:45:56,410:INFO:Declaring metric variables
2025-06-09 22:45:56,415:INFO:Importing untrained model
2025-06-09 22:45:56,415:INFO:Declaring custom model
2025-06-09 22:45:56,415:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:45:56,431:INFO:Starting cross validation
2025-06-09 22:45:56,431:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:45:58,841:INFO:Calculating mean and std
2025-06-09 22:45:58,841:INFO:Creating metrics dataframe
2025-06-09 22:45:58,841:INFO:Uploading results into container
2025-06-09 22:45:58,841:INFO:Uploading model into container now
2025-06-09 22:45:58,841:INFO:_master_model_container: 29
2025-06-09 22:45:58,841:INFO:_display_container: 5
2025-06-09 22:45:58,841:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:45:58,851:INFO:create_model() successfully completed......................................
2025-06-09 22:45:59,022:INFO:SubProcess create_model() end ==================================
2025-06-09 22:45:59,022:INFO:Creating metrics dataframe
2025-06-09 22:45:59,033:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-06-09 22:45:59,042:INFO:Initializing create_model()
2025-06-09 22:45:59,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:45:59,042:INFO:Checking exceptions
2025-06-09 22:45:59,042:INFO:Importing libraries
2025-06-09 22:45:59,042:INFO:Copying training dataset
2025-06-09 22:45:59,060:INFO:Defining folds
2025-06-09 22:45:59,061:INFO:Declaring metric variables
2025-06-09 22:45:59,061:INFO:Importing untrained model
2025-06-09 22:45:59,061:INFO:Declaring custom model
2025-06-09 22:45:59,062:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:45:59,064:INFO:Cross validation set to False
2025-06-09 22:45:59,064:INFO:Fitting Model
2025-06-09 22:45:59,858:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:45:59,858:INFO:create_model() successfully completed......................................
2025-06-09 22:46:00,058:INFO:_master_model_container: 29
2025-06-09 22:46:00,058:INFO:_display_container: 5
2025-06-09 22:46:00,059:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:46:00,059:INFO:compare_models() successfully completed......................................
2025-06-09 22:50:03,829:INFO:Initializing tune_model()
2025-06-09 22:50:03,829:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=None, round=4, n_iter=50, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-06-09 22:50:03,829:INFO:Checking exceptions
2025-06-09 22:50:03,859:INFO:Copying training dataset
2025-06-09 22:50:03,865:INFO:Checking base model
2025-06-09 22:50:03,865:INFO:Base model : Gradient Boosting Regressor
2025-06-09 22:50:03,877:INFO:Declaring metric variables
2025-06-09 22:50:03,894:INFO:Defining Hyperparameters
2025-06-09 22:50:04,174:INFO:Tuning with n_jobs=-1
2025-06-09 22:50:04,174:INFO:Initializing RandomizedSearchCV
2025-06-09 22:52:53,299:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 3, 'actual_estimator__learning_rate': 0.1}
2025-06-09 22:52:53,299:INFO:Hyperparameter search completed
2025-06-09 22:52:53,299:INFO:SubProcess create_model() called ==================================
2025-06-09 22:52:53,299:INFO:Initializing create_model()
2025-06-09 22:52:53,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F96726FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.9, 'n_estimators': 140, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 3, 'learning_rate': 0.1})
2025-06-09 22:52:53,299:INFO:Checking exceptions
2025-06-09 22:52:53,299:INFO:Importing libraries
2025-06-09 22:52:53,312:INFO:Copying training dataset
2025-06-09 22:52:53,317:INFO:Defining folds
2025-06-09 22:52:53,317:INFO:Declaring metric variables
2025-06-09 22:52:53,317:INFO:Importing untrained model
2025-06-09 22:52:53,317:INFO:Declaring custom model
2025-06-09 22:52:53,333:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:52:53,333:INFO:Starting cross validation
2025-06-09 22:52:53,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:52:56,981:INFO:Calculating mean and std
2025-06-09 22:52:56,981:INFO:Creating metrics dataframe
2025-06-09 22:52:56,981:INFO:Finalizing model
2025-06-09 22:52:58,225:INFO:Uploading results into container
2025-06-09 22:52:58,225:INFO:Uploading model into container now
2025-06-09 22:52:58,225:INFO:_master_model_container: 30
2025-06-09 22:52:58,225:INFO:_display_container: 6
2025-06-09 22:52:58,225:INFO:GradientBoostingRegressor(max_features=1.0, min_impurity_decrease=0.01,
                          min_samples_leaf=5, min_samples_split=7,
                          n_estimators=140, random_state=33, subsample=0.9)
2025-06-09 22:52:58,225:INFO:create_model() successfully completed......................................
2025-06-09 22:52:58,414:INFO:SubProcess create_model() end ==================================
2025-06-09 22:52:58,414:INFO:choose_better activated
2025-06-09 22:52:58,414:INFO:SubProcess create_model() called ==================================
2025-06-09 22:52:58,414:INFO:Initializing create_model()
2025-06-09 22:52:58,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:52:58,414:INFO:Checking exceptions
2025-06-09 22:52:58,414:INFO:Importing libraries
2025-06-09 22:52:58,414:INFO:Copying training dataset
2025-06-09 22:52:58,433:INFO:Defining folds
2025-06-09 22:52:58,433:INFO:Declaring metric variables
2025-06-09 22:52:58,433:INFO:Importing untrained model
2025-06-09 22:52:58,433:INFO:Declaring custom model
2025-06-09 22:52:58,433:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:52:58,433:INFO:Starting cross validation
2025-06-09 22:52:58,433:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:53:01,161:INFO:Calculating mean and std
2025-06-09 22:53:01,163:INFO:Creating metrics dataframe
2025-06-09 22:53:01,163:INFO:Finalizing model
2025-06-09 22:53:01,964:INFO:Uploading results into container
2025-06-09 22:53:01,964:INFO:Uploading model into container now
2025-06-09 22:53:01,964:INFO:_master_model_container: 31
2025-06-09 22:53:01,964:INFO:_display_container: 7
2025-06-09 22:53:01,964:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:53:01,964:INFO:create_model() successfully completed......................................
2025-06-09 22:53:02,140:INFO:SubProcess create_model() end ==================================
2025-06-09 22:53:02,140:INFO:GradientBoostingRegressor(random_state=33) result for R2 is 0.8827
2025-06-09 22:53:02,142:INFO:GradientBoostingRegressor(max_features=1.0, min_impurity_decrease=0.01,
                          min_samples_leaf=5, min_samples_split=7,
                          n_estimators=140, random_state=33, subsample=0.9) result for R2 is 0.8821
2025-06-09 22:53:02,142:INFO:GradientBoostingRegressor(random_state=33) is best model
2025-06-09 22:53:02,142:INFO:choose_better completed
2025-06-09 22:53:02,142:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-06-09 22:53:02,157:INFO:_master_model_container: 31
2025-06-09 22:53:02,157:INFO:_display_container: 6
2025-06-09 22:53:02,158:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:53:02,158:INFO:tune_model() successfully completed......................................
2025-06-09 22:54:14,707:INFO:Initializing tune_model()
2025-06-09 22:54:14,707:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=None, round=4, n_iter=50, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-06-09 22:54:14,707:INFO:Checking exceptions
2025-06-09 22:54:14,730:INFO:Copying training dataset
2025-06-09 22:54:14,740:INFO:Checking base model
2025-06-09 22:54:14,740:INFO:Base model : Gradient Boosting Regressor
2025-06-09 22:54:14,749:INFO:Declaring metric variables
2025-06-09 22:54:14,765:INFO:Defining Hyperparameters
2025-06-09 22:54:15,040:INFO:Tuning with n_jobs=-1
2025-06-09 22:54:15,040:INFO:Initializing RandomizedSearchCV
2025-06-09 22:57:08,096:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 3, 'actual_estimator__learning_rate': 0.1}
2025-06-09 22:57:08,096:INFO:Hyperparameter search completed
2025-06-09 22:57:08,096:INFO:SubProcess create_model() called ==================================
2025-06-09 22:57:08,096:INFO:Initializing create_model()
2025-06-09 22:57:08,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DC6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.9, 'n_estimators': 140, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 3, 'learning_rate': 0.1})
2025-06-09 22:57:08,096:INFO:Checking exceptions
2025-06-09 22:57:08,102:INFO:Importing libraries
2025-06-09 22:57:08,102:INFO:Copying training dataset
2025-06-09 22:57:08,113:INFO:Defining folds
2025-06-09 22:57:08,113:INFO:Declaring metric variables
2025-06-09 22:57:08,113:INFO:Importing untrained model
2025-06-09 22:57:08,113:INFO:Declaring custom model
2025-06-09 22:57:08,123:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:57:08,137:INFO:Starting cross validation
2025-06-09 22:57:08,139:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:57:11,614:INFO:Calculating mean and std
2025-06-09 22:57:11,614:INFO:Creating metrics dataframe
2025-06-09 22:57:11,614:INFO:Finalizing model
2025-06-09 22:57:12,860:INFO:Uploading results into container
2025-06-09 22:57:12,860:INFO:Uploading model into container now
2025-06-09 22:57:12,860:INFO:_master_model_container: 32
2025-06-09 22:57:12,860:INFO:_display_container: 7
2025-06-09 22:57:12,860:INFO:GradientBoostingRegressor(max_features=1.0, min_impurity_decrease=0.01,
                          min_samples_leaf=5, min_samples_split=7,
                          n_estimators=140, random_state=33, subsample=0.9)
2025-06-09 22:57:12,860:INFO:create_model() successfully completed......................................
2025-06-09 22:57:13,046:INFO:SubProcess create_model() end ==================================
2025-06-09 22:57:13,046:INFO:choose_better activated
2025-06-09 22:57:13,050:INFO:SubProcess create_model() called ==================================
2025-06-09 22:57:13,050:INFO:Initializing create_model()
2025-06-09 22:57:13,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:57:13,051:INFO:Checking exceptions
2025-06-09 22:57:13,052:INFO:Importing libraries
2025-06-09 22:57:13,053:INFO:Copying training dataset
2025-06-09 22:57:13,060:INFO:Defining folds
2025-06-09 22:57:13,061:INFO:Declaring metric variables
2025-06-09 22:57:13,061:INFO:Importing untrained model
2025-06-09 22:57:13,061:INFO:Declaring custom model
2025-06-09 22:57:13,062:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:57:13,062:INFO:Starting cross validation
2025-06-09 22:57:13,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:57:15,720:INFO:Calculating mean and std
2025-06-09 22:57:15,721:INFO:Creating metrics dataframe
2025-06-09 22:57:15,723:INFO:Finalizing model
2025-06-09 22:57:16,511:INFO:Uploading results into container
2025-06-09 22:57:16,511:INFO:Uploading model into container now
2025-06-09 22:57:16,512:INFO:_master_model_container: 33
2025-06-09 22:57:16,512:INFO:_display_container: 8
2025-06-09 22:57:16,512:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:57:16,513:INFO:create_model() successfully completed......................................
2025-06-09 22:57:16,680:INFO:SubProcess create_model() end ==================================
2025-06-09 22:57:16,681:INFO:GradientBoostingRegressor(random_state=33) result for R2 is 0.8827
2025-06-09 22:57:16,681:INFO:GradientBoostingRegressor(max_features=1.0, min_impurity_decrease=0.01,
                          min_samples_leaf=5, min_samples_split=7,
                          n_estimators=140, random_state=33, subsample=0.9) result for R2 is 0.8821
2025-06-09 22:57:16,681:INFO:GradientBoostingRegressor(random_state=33) is best model
2025-06-09 22:57:16,681:INFO:choose_better completed
2025-06-09 22:57:16,681:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-06-09 22:57:16,697:INFO:_master_model_container: 33
2025-06-09 22:57:16,697:INFO:_display_container: 7
2025-06-09 22:57:16,697:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:57:16,697:INFO:tune_model() successfully completed......................................
2025-06-09 22:58:18,313:INFO:Initializing compare_models()
2025-06-09 22:58:18,313:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, include=[GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, 'include': [GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33), GradientBoostingRegressor(random_state=33)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-06-09 22:58:18,313:INFO:Checking exceptions
2025-06-09 22:58:18,316:INFO:Preparing display monitor
2025-06-09 22:58:18,351:INFO:Initializing custom model Gradient Boosting Regressor
2025-06-09 22:58:18,351:INFO:Total runtime is 1.6629695892333984e-05 minutes
2025-06-09 22:58:18,360:INFO:SubProcess create_model() called ==================================
2025-06-09 22:58:18,360:INFO:Initializing create_model()
2025-06-09 22:58:18,362:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DC6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:58:18,362:INFO:Checking exceptions
2025-06-09 22:58:18,362:INFO:Importing libraries
2025-06-09 22:58:18,362:INFO:Copying training dataset
2025-06-09 22:58:18,376:INFO:Defining folds
2025-06-09 22:58:18,376:INFO:Declaring metric variables
2025-06-09 22:58:18,407:INFO:Importing untrained model
2025-06-09 22:58:18,408:INFO:Declaring custom model
2025-06-09 22:58:18,416:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:58:18,467:INFO:Starting cross validation
2025-06-09 22:58:18,467:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:58:21,292:INFO:Calculating mean and std
2025-06-09 22:58:21,292:INFO:Creating metrics dataframe
2025-06-09 22:58:21,304:INFO:Uploading results into container
2025-06-09 22:58:21,305:INFO:Uploading model into container now
2025-06-09 22:58:21,305:INFO:_master_model_container: 34
2025-06-09 22:58:21,306:INFO:_display_container: 8
2025-06-09 22:58:21,307:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:58:21,307:INFO:create_model() successfully completed......................................
2025-06-09 22:58:21,498:INFO:SubProcess create_model() end ==================================
2025-06-09 22:58:21,498:INFO:Creating metrics dataframe
2025-06-09 22:58:21,510:INFO:Initializing custom model Gradient Boosting Regressor
2025-06-09 22:58:21,511:INFO:Total runtime is 0.05268498261769613 minutes
2025-06-09 22:58:21,515:INFO:SubProcess create_model() called ==================================
2025-06-09 22:58:21,517:INFO:Initializing create_model()
2025-06-09 22:58:21,518:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DC6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:58:21,518:INFO:Checking exceptions
2025-06-09 22:58:21,520:INFO:Importing libraries
2025-06-09 22:58:21,520:INFO:Copying training dataset
2025-06-09 22:58:21,532:INFO:Defining folds
2025-06-09 22:58:21,533:INFO:Declaring metric variables
2025-06-09 22:58:21,545:INFO:Importing untrained model
2025-06-09 22:58:21,545:INFO:Declaring custom model
2025-06-09 22:58:21,551:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:58:21,567:INFO:Starting cross validation
2025-06-09 22:58:21,571:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:58:24,213:INFO:Calculating mean and std
2025-06-09 22:58:24,214:INFO:Creating metrics dataframe
2025-06-09 22:58:24,216:INFO:Uploading results into container
2025-06-09 22:58:24,217:INFO:Uploading model into container now
2025-06-09 22:58:24,219:INFO:_master_model_container: 35
2025-06-09 22:58:24,221:INFO:_display_container: 8
2025-06-09 22:58:24,222:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:58:24,222:INFO:create_model() successfully completed......................................
2025-06-09 22:58:24,404:INFO:SubProcess create_model() end ==================================
2025-06-09 22:58:24,404:INFO:Creating metrics dataframe
2025-06-09 22:58:24,413:INFO:Initializing custom model Gradient Boosting Regressor
2025-06-09 22:58:24,414:INFO:Total runtime is 0.10104453563690186 minutes
2025-06-09 22:58:24,417:INFO:SubProcess create_model() called ==================================
2025-06-09 22:58:24,420:INFO:Initializing create_model()
2025-06-09 22:58:24,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DC6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:58:24,420:INFO:Checking exceptions
2025-06-09 22:58:24,420:INFO:Importing libraries
2025-06-09 22:58:24,420:INFO:Copying training dataset
2025-06-09 22:58:24,429:INFO:Defining folds
2025-06-09 22:58:24,430:INFO:Declaring metric variables
2025-06-09 22:58:24,434:INFO:Importing untrained model
2025-06-09 22:58:24,437:INFO:Declaring custom model
2025-06-09 22:58:24,443:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:58:24,453:INFO:Starting cross validation
2025-06-09 22:58:24,457:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:58:27,060:INFO:Calculating mean and std
2025-06-09 22:58:27,062:INFO:Creating metrics dataframe
2025-06-09 22:58:27,064:INFO:Uploading results into container
2025-06-09 22:58:27,065:INFO:Uploading model into container now
2025-06-09 22:58:27,065:INFO:_master_model_container: 36
2025-06-09 22:58:27,065:INFO:_display_container: 8
2025-06-09 22:58:27,066:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:58:27,067:INFO:create_model() successfully completed......................................
2025-06-09 22:58:27,256:INFO:SubProcess create_model() end ==================================
2025-06-09 22:58:27,256:INFO:Creating metrics dataframe
2025-06-09 22:58:27,265:INFO:Initializing custom model Gradient Boosting Regressor
2025-06-09 22:58:27,266:INFO:Total runtime is 0.14860073725382486 minutes
2025-06-09 22:58:27,271:INFO:SubProcess create_model() called ==================================
2025-06-09 22:58:27,272:INFO:Initializing create_model()
2025-06-09 22:58:27,272:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025F99DC6FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:58:27,272:INFO:Checking exceptions
2025-06-09 22:58:27,273:INFO:Importing libraries
2025-06-09 22:58:27,273:INFO:Copying training dataset
2025-06-09 22:58:27,281:INFO:Defining folds
2025-06-09 22:58:27,281:INFO:Declaring metric variables
2025-06-09 22:58:27,285:INFO:Importing untrained model
2025-06-09 22:58:27,285:INFO:Declaring custom model
2025-06-09 22:58:27,292:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:58:27,305:INFO:Starting cross validation
2025-06-09 22:58:27,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:58:29,941:INFO:Calculating mean and std
2025-06-09 22:58:29,942:INFO:Creating metrics dataframe
2025-06-09 22:58:29,945:INFO:Uploading results into container
2025-06-09 22:58:29,945:INFO:Uploading model into container now
2025-06-09 22:58:29,946:INFO:_master_model_container: 37
2025-06-09 22:58:29,946:INFO:_display_container: 8
2025-06-09 22:58:29,946:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:58:29,947:INFO:create_model() successfully completed......................................
2025-06-09 22:58:30,134:INFO:SubProcess create_model() end ==================================
2025-06-09 22:58:30,135:INFO:Creating metrics dataframe
2025-06-09 22:58:30,146:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-06-09 22:58:30,157:INFO:Initializing create_model()
2025-06-09 22:58:30,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:58:30,157:INFO:Checking exceptions
2025-06-09 22:58:30,162:INFO:Importing libraries
2025-06-09 22:58:30,162:INFO:Copying training dataset
2025-06-09 22:58:30,173:INFO:Defining folds
2025-06-09 22:58:30,174:INFO:Declaring metric variables
2025-06-09 22:58:30,174:INFO:Importing untrained model
2025-06-09 22:58:30,174:INFO:Declaring custom model
2025-06-09 22:58:30,176:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:58:30,177:INFO:Cross validation set to False
2025-06-09 22:58:30,177:INFO:Fitting Model
2025-06-09 22:58:31,017:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:58:31,022:INFO:create_model() successfully completed......................................
2025-06-09 22:58:31,235:INFO:_master_model_container: 37
2025-06-09 22:58:31,236:INFO:_display_container: 8
2025-06-09 22:58:31,237:INFO:GradientBoostingRegressor(random_state=33)
2025-06-09 22:58:31,237:INFO:compare_models() successfully completed......................................
2025-06-09 23:01:35,548:INFO:Initializing predict_model()
2025-06-09 23:01:35,548:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025F9DF68360>)
2025-06-09 23:01:35,553:INFO:Checking exceptions
2025-06-09 23:01:35,553:INFO:Preloading libraries
2025-06-09 23:01:35,700:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-06-09 23:02:47,937:INFO:Initializing predict_model()
2025-06-09 23:02:47,943:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025F9DF6ACA0>)
2025-06-09 23:02:47,943:INFO:Checking exceptions
2025-06-09 23:02:47,943:INFO:Preloading libraries
2025-06-09 23:02:48,080:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-06-09 23:06:53,730:INFO:Initializing predict_model()
2025-06-09 23:06:53,730:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025F9DEA0680>)
2025-06-09 23:06:53,730:INFO:Checking exceptions
2025-06-09 23:06:53,730:INFO:Preloading libraries
2025-06-09 23:06:53,860:WARNING:c:\Users\Mateusz\miniconda3\envs\od_zera_do_ai\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-06-09 23:11:36,751:INFO:Initializing plot_model()
2025-06-09 23:11:36,751:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-06-09 23:11:36,751:INFO:Checking exceptions
2025-06-09 23:13:40,238:INFO:Initializing finalize_model()
2025-06-09 23:13:40,238:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-09 23:13:40,238:INFO:Finalizing GradientBoostingRegressor(random_state=33)
2025-06-09 23:13:40,248:INFO:Initializing create_model()
2025-06-09 23:13:40,248:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025F961B2490>, estimator=GradientBoostingRegressor(random_state=33), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 23:13:40,249:INFO:Checking exceptions
2025-06-09 23:13:40,250:INFO:Importing libraries
2025-06-09 23:13:40,251:INFO:Copying training dataset
2025-06-09 23:13:40,251:INFO:Defining folds
2025-06-09 23:13:40,251:INFO:Declaring metric variables
2025-06-09 23:13:40,251:INFO:Importing untrained model
2025-06-09 23:13:40,252:INFO:Declaring custom model
2025-06-09 23:13:40,252:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 23:13:40,254:INFO:Cross validation set to False
2025-06-09 23:13:40,254:INFO:Fitting Model
2025-06-09 23:13:41,421:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))])
2025-06-09 23:13:41,421:INFO:create_model() successfully completed......................................
2025-06-09 23:13:41,607:INFO:_master_model_container: 37
2025-06-09 23:13:41,607:INFO:_display_container: 11
2025-06-09 23:13:41,638:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))])
2025-06-09 23:13:41,638:INFO:finalize_model() successfully completed......................................
2025-06-09 23:16:07,641:INFO:Initializing save_model()
2025-06-09 23:16:07,641:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Mateusz\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-09 23:16:07,641:INFO:Adding model into prep_pipe
2025-06-09 23:16:07,641:WARNING:Only Model saved as it was a pipeline.
2025-06-09 23:16:07,651:INFO:best_model.pkl saved in current working directory
2025-06-09 23:16:07,682:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))])
2025-06-09 23:16:07,682:INFO:save_model() successfully completed......................................
2025-06-10 13:33:22,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 13:33:22,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 13:33:22,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 13:33:22,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 13:33:24,958:INFO:Initializing load_model()
2025-06-10 13:33:24,958:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-11 13:31:42,660:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 13:31:42,660:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 13:31:42,660:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 13:31:42,660:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 13:31:45,275:INFO:Initializing load_model()
2025-06-11 13:31:45,275:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-11 13:54:56,004:INFO:Initializing predict_model()
2025-06-11 13:54:56,004:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D8800FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D86DDB20>)
2025-06-11 13:54:56,004:INFO:Checking exceptions
2025-06-11 13:54:56,004:INFO:Preloading libraries
2025-06-11 13:54:56,004:INFO:Set up data.
2025-06-11 13:54:56,021:INFO:Set up index.
2025-06-11 14:04:29,382:INFO:Initializing predict_model()
2025-06-11 14:04:29,382:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D6ACBD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D86DCE00>)
2025-06-11 14:04:29,382:INFO:Checking exceptions
2025-06-11 14:04:29,382:INFO:Preloading libraries
2025-06-11 14:04:29,383:INFO:Set up data.
2025-06-11 14:04:29,385:INFO:Set up index.
2025-06-11 14:11:22,981:INFO:Initializing predict_model()
2025-06-11 14:11:22,981:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D87D1F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D83FBBA0>)
2025-06-11 14:11:22,981:INFO:Checking exceptions
2025-06-11 14:11:22,981:INFO:Preloading libraries
2025-06-11 14:11:22,982:INFO:Set up data.
2025-06-11 14:11:22,985:INFO:Set up index.
2025-06-11 14:21:24,417:INFO:Initializing predict_model()
2025-06-11 14:21:24,418:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D86F4450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D87FBBA0>)
2025-06-11 14:21:24,418:INFO:Checking exceptions
2025-06-11 14:21:24,418:INFO:Preloading libraries
2025-06-11 14:21:24,419:INFO:Set up data.
2025-06-11 14:21:24,421:INFO:Set up index.
2025-06-11 14:22:02,903:INFO:Initializing predict_model()
2025-06-11 14:22:02,918:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D6AC8910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D87FB060>)
2025-06-11 14:22:02,918:INFO:Checking exceptions
2025-06-11 14:22:02,919:INFO:Preloading libraries
2025-06-11 14:22:02,920:INFO:Set up data.
2025-06-11 14:22:02,922:INFO:Set up index.
2025-06-11 14:29:39,238:INFO:Initializing predict_model()
2025-06-11 14:29:39,238:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DCF3A850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D885D4E0>)
2025-06-11 14:29:39,239:INFO:Checking exceptions
2025-06-11 14:29:39,239:INFO:Preloading libraries
2025-06-11 14:29:39,239:INFO:Set up data.
2025-06-11 14:29:39,241:INFO:Set up index.
2025-06-11 14:35:09,086:INFO:Initializing predict_model()
2025-06-11 14:35:09,086:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DD025FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D885C860>)
2025-06-11 14:35:09,086:INFO:Checking exceptions
2025-06-11 14:35:09,086:INFO:Preloading libraries
2025-06-11 14:35:09,086:INFO:Set up data.
2025-06-11 14:35:09,086:INFO:Set up index.
2025-06-11 14:35:24,280:INFO:Initializing predict_model()
2025-06-11 14:35:24,280:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D6331110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D885DF80>)
2025-06-11 14:35:24,280:INFO:Checking exceptions
2025-06-11 14:35:24,280:INFO:Preloading libraries
2025-06-11 14:35:24,280:INFO:Set up data.
2025-06-11 14:35:24,280:INFO:Set up index.
2025-06-11 14:35:46,739:INFO:Initializing predict_model()
2025-06-11 14:35:46,739:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DD025CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D87640E0>)
2025-06-11 14:35:46,739:INFO:Checking exceptions
2025-06-11 14:35:46,739:INFO:Preloading libraries
2025-06-11 14:35:46,739:INFO:Set up data.
2025-06-11 14:35:46,759:INFO:Set up index.
2025-06-11 14:37:17,652:INFO:Initializing predict_model()
2025-06-11 14:37:17,653:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D6190BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D885EFC0>)
2025-06-11 14:37:17,653:INFO:Checking exceptions
2025-06-11 14:37:17,653:INFO:Preloading libraries
2025-06-11 14:37:17,653:INFO:Set up data.
2025-06-11 14:37:17,657:INFO:Set up index.
2025-06-11 14:48:36,611:INFO:Initializing predict_model()
2025-06-11 14:48:36,611:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DD024310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D87FB920>)
2025-06-11 14:48:36,611:INFO:Checking exceptions
2025-06-11 14:48:36,611:INFO:Preloading libraries
2025-06-11 14:48:36,611:INFO:Set up data.
2025-06-11 14:48:36,611:INFO:Set up index.
2025-06-11 14:57:13,786:INFO:Initializing predict_model()
2025-06-11 14:57:13,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D63335D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D87F9080>)
2025-06-11 14:57:13,786:INFO:Checking exceptions
2025-06-11 14:57:13,786:INFO:Preloading libraries
2025-06-11 14:57:13,786:INFO:Set up data.
2025-06-11 14:57:13,786:INFO:Set up index.
2025-06-11 14:59:34,488:INFO:Initializing predict_model()
2025-06-11 14:59:34,488:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DCF38190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3CF7E6FC0>)
2025-06-11 14:59:34,488:INFO:Checking exceptions
2025-06-11 14:59:34,488:INFO:Preloading libraries
2025-06-11 14:59:34,488:INFO:Set up data.
2025-06-11 14:59:34,488:INFO:Set up index.
2025-06-11 14:59:58,146:INFO:Initializing predict_model()
2025-06-11 14:59:58,147:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DD018FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D6AC4E00>)
2025-06-11 14:59:58,147:INFO:Checking exceptions
2025-06-11 14:59:58,147:INFO:Preloading libraries
2025-06-11 14:59:58,147:INFO:Set up data.
2025-06-11 14:59:58,147:INFO:Set up index.
2025-06-11 15:06:01,840:INFO:Initializing predict_model()
2025-06-11 15:06:01,840:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DCF3A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D6AC51C0>)
2025-06-11 15:06:01,840:INFO:Checking exceptions
2025-06-11 15:06:01,840:INFO:Preloading libraries
2025-06-11 15:06:01,840:INFO:Set up data.
2025-06-11 15:06:01,840:INFO:Set up index.
2025-06-11 15:12:44,230:INFO:Initializing predict_model()
2025-06-11 15:12:44,231:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DD01A250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D63254E0>)
2025-06-11 15:12:44,231:INFO:Checking exceptions
2025-06-11 15:12:44,231:INFO:Preloading libraries
2025-06-11 15:12:44,231:INFO:Set up data.
2025-06-11 15:12:44,232:INFO:Set up index.
2025-06-11 15:12:54,316:INFO:Initializing predict_model()
2025-06-11 15:12:54,316:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DD025610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D5D5FBA0>)
2025-06-11 15:12:54,316:INFO:Checking exceptions
2025-06-11 15:12:54,316:INFO:Preloading libraries
2025-06-11 15:12:54,316:INFO:Set up data.
2025-06-11 15:12:54,316:INFO:Set up index.
2025-06-11 15:13:58,961:INFO:Initializing predict_model()
2025-06-11 15:13:58,961:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3DD0184D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D83FBB00>)
2025-06-11 15:13:58,961:INFO:Checking exceptions
2025-06-11 15:13:58,961:INFO:Preloading libraries
2025-06-11 15:13:58,961:INFO:Set up data.
2025-06-11 15:13:58,961:INFO:Set up index.
2025-06-11 15:18:54,945:INFO:Initializing predict_model()
2025-06-11 15:18:54,945:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D6AE3A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D84C6840>)
2025-06-11 15:18:54,945:INFO:Checking exceptions
2025-06-11 15:18:54,945:INFO:Preloading libraries
2025-06-11 15:18:54,945:INFO:Set up data.
2025-06-11 15:18:54,945:INFO:Set up index.
2025-06-11 15:21:43,793:INFO:Initializing predict_model()
2025-06-11 15:21:43,793:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A3D6AED490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A3D62CDA80>)
2025-06-11 15:21:43,793:INFO:Checking exceptions
2025-06-11 15:21:43,793:INFO:Preloading libraries
2025-06-11 15:21:43,793:INFO:Set up data.
2025-06-11 15:21:43,793:INFO:Set up index.
2025-06-11 18:01:21,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 18:01:21,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 18:01:21,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 18:01:21,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 18:01:24,152:INFO:Initializing load_model()
2025-06-11 18:01:24,152:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-11 18:05:56,596:INFO:Initializing predict_model()
2025-06-11 18:05:56,596:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A300585D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A2B3C5B20>)
2025-06-11 18:05:56,596:INFO:Checking exceptions
2025-06-11 18:05:56,596:INFO:Preloading libraries
2025-06-11 18:05:56,596:INFO:Set up data.
2025-06-11 18:05:56,596:INFO:Set up index.
2025-06-11 18:06:14,073:INFO:Initializing predict_model()
2025-06-11 18:06:14,073:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2E42A610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A300A3EC0>)
2025-06-11 18:06:14,073:INFO:Checking exceptions
2025-06-11 18:06:14,073:INFO:Preloading libraries
2025-06-11 18:06:14,073:INFO:Set up data.
2025-06-11 18:06:14,073:INFO:Set up index.
2025-06-11 18:06:41,231:INFO:Initializing predict_model()
2025-06-11 18:06:41,231:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2E43B1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A300B4C20>)
2025-06-11 18:06:41,231:INFO:Checking exceptions
2025-06-11 18:06:41,234:INFO:Preloading libraries
2025-06-11 18:06:41,235:INFO:Set up data.
2025-06-11 18:06:41,237:INFO:Set up index.
2025-06-11 18:16:32,213:INFO:Initializing predict_model()
2025-06-11 18:16:32,213:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2E43B590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A30109E40>)
2025-06-11 18:16:32,213:INFO:Checking exceptions
2025-06-11 18:16:32,213:INFO:Preloading libraries
2025-06-11 18:16:32,213:INFO:Set up data.
2025-06-11 18:16:32,213:INFO:Set up index.
2025-06-11 18:20:27,201:INFO:Initializing predict_model()
2025-06-11 18:20:27,201:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A3014C550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A300A3920>)
2025-06-11 18:20:27,201:INFO:Checking exceptions
2025-06-11 18:20:27,201:INFO:Preloading libraries
2025-06-11 18:20:27,201:INFO:Set up data.
2025-06-11 18:20:27,206:INFO:Set up index.
2025-06-11 18:28:46,575:INFO:Initializing predict_model()
2025-06-11 18:28:46,575:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A32F2E690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A334FA700>)
2025-06-11 18:28:46,575:INFO:Checking exceptions
2025-06-11 18:28:46,575:INFO:Preloading libraries
2025-06-11 18:28:46,575:INFO:Set up data.
2025-06-11 18:28:46,579:INFO:Set up index.
2025-06-11 18:29:14,002:INFO:Initializing predict_model()
2025-06-11 18:29:14,002:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2E42A510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A2DC29F80>)
2025-06-11 18:29:14,002:INFO:Checking exceptions
2025-06-11 18:29:14,002:INFO:Preloading libraries
2025-06-11 18:29:14,002:INFO:Set up data.
2025-06-11 18:29:14,002:INFO:Set up index.
2025-06-11 18:29:43,942:INFO:Initializing predict_model()
2025-06-11 18:29:43,942:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A32849910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A3010B060>)
2025-06-11 18:29:43,942:INFO:Checking exceptions
2025-06-11 18:29:43,942:INFO:Preloading libraries
2025-06-11 18:29:43,942:INFO:Set up data.
2025-06-11 18:29:43,942:INFO:Set up index.
2025-06-11 18:30:06,100:INFO:Initializing predict_model()
2025-06-11 18:30:06,100:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A33646C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A32FCC900>)
2025-06-11 18:30:06,100:INFO:Checking exceptions
2025-06-11 18:30:06,100:INFO:Preloading libraries
2025-06-11 18:30:06,100:INFO:Set up data.
2025-06-11 18:30:06,100:INFO:Set up index.
2025-06-11 18:35:14,512:INFO:Initializing predict_model()
2025-06-11 18:35:14,512:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2DC96C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A2FD4B9C0>)
2025-06-11 18:35:14,512:INFO:Checking exceptions
2025-06-11 18:35:14,512:INFO:Preloading libraries
2025-06-11 18:35:14,512:INFO:Set up data.
2025-06-11 18:35:14,512:INFO:Set up index.
2025-06-11 18:40:05,390:INFO:Initializing predict_model()
2025-06-11 18:40:05,390:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A327D5F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A334F9EE0>)
2025-06-11 18:40:05,390:INFO:Checking exceptions
2025-06-11 18:40:05,390:INFO:Preloading libraries
2025-06-11 18:40:05,390:INFO:Set up data.
2025-06-11 18:40:05,398:INFO:Set up index.
2025-06-11 18:44:12,595:INFO:Initializing predict_model()
2025-06-11 18:44:12,595:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A3013ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A30145940>)
2025-06-11 18:44:12,595:INFO:Checking exceptions
2025-06-11 18:44:12,595:INFO:Preloading libraries
2025-06-11 18:44:12,595:INFO:Set up data.
2025-06-11 18:44:12,613:INFO:Set up index.
2025-06-11 18:49:13,892:INFO:Initializing predict_model()
2025-06-11 18:49:13,892:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A3015F210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A27136A20>)
2025-06-11 18:49:13,892:INFO:Checking exceptions
2025-06-11 18:49:13,892:INFO:Preloading libraries
2025-06-11 18:49:13,892:INFO:Set up data.
2025-06-11 18:49:13,892:INFO:Set up index.
2025-06-11 18:53:22,556:INFO:Initializing predict_model()
2025-06-11 18:53:22,556:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A33646AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A30147240>)
2025-06-11 18:53:22,556:INFO:Checking exceptions
2025-06-11 18:53:22,556:INFO:Preloading libraries
2025-06-11 18:53:22,561:INFO:Set up data.
2025-06-11 18:53:22,564:INFO:Set up index.
2025-06-11 18:54:33,488:INFO:Initializing predict_model()
2025-06-11 18:54:33,489:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A3286B2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A30145B20>)
2025-06-11 18:54:33,489:INFO:Checking exceptions
2025-06-11 18:54:33,490:INFO:Preloading libraries
2025-06-11 18:54:33,491:INFO:Set up data.
2025-06-11 18:54:33,493:INFO:Set up index.
2025-06-11 18:58:11,541:INFO:Initializing predict_model()
2025-06-11 18:58:11,541:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2DC51910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A3002CCC0>)
2025-06-11 18:58:11,541:INFO:Checking exceptions
2025-06-11 18:58:11,541:INFO:Preloading libraries
2025-06-11 18:58:11,541:INFO:Set up data.
2025-06-11 18:58:11,557:INFO:Set up index.
2025-06-11 18:58:47,213:INFO:Initializing predict_model()
2025-06-11 18:58:47,213:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2E42B810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A300A3CE0>)
2025-06-11 18:58:47,213:INFO:Checking exceptions
2025-06-11 18:58:47,213:INFO:Preloading libraries
2025-06-11 18:58:47,213:INFO:Set up data.
2025-06-11 18:58:47,229:INFO:Set up index.
2025-06-11 19:01:30,707:INFO:Initializing predict_model()
2025-06-11 19:01:30,707:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2F7A6C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A2D503CE0>)
2025-06-11 19:01:30,707:INFO:Checking exceptions
2025-06-11 19:01:30,707:INFO:Preloading libraries
2025-06-11 19:01:30,707:INFO:Set up data.
2025-06-11 19:01:30,707:INFO:Set up index.
2025-06-11 19:02:38,517:INFO:Initializing predict_model()
2025-06-11 19:02:38,517:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2E44D410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A30146160>)
2025-06-11 19:02:38,517:INFO:Checking exceptions
2025-06-11 19:02:38,517:INFO:Preloading libraries
2025-06-11 19:02:38,517:INFO:Set up data.
2025-06-11 19:02:38,517:INFO:Set up index.
2025-06-11 19:02:49,730:INFO:Initializing predict_model()
2025-06-11 19:02:49,730:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A3362EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A2F982DE0>)
2025-06-11 19:02:49,730:INFO:Checking exceptions
2025-06-11 19:02:49,730:INFO:Preloading libraries
2025-06-11 19:02:49,730:INFO:Set up data.
2025-06-11 19:02:49,730:INFO:Set up index.
2025-06-11 19:05:33,706:INFO:Initializing predict_model()
2025-06-11 19:05:33,706:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2708B810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A300B4C20>)
2025-06-11 19:05:33,706:INFO:Checking exceptions
2025-06-11 19:05:33,706:INFO:Preloading libraries
2025-06-11 19:05:33,706:INFO:Set up data.
2025-06-11 19:05:33,706:INFO:Set up index.
2025-06-11 19:06:26,572:INFO:Initializing predict_model()
2025-06-11 19:06:26,572:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A2E41EF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A30109B20>)
2025-06-11 19:06:26,572:INFO:Checking exceptions
2025-06-11 19:06:26,572:INFO:Preloading libraries
2025-06-11 19:06:26,572:INFO:Set up data.
2025-06-11 19:06:26,572:INFO:Set up index.
2025-06-11 21:01:26,297:INFO:Initializing predict_model()
2025-06-11 21:01:26,297:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025A3015F250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A301476A0>)
2025-06-11 21:01:26,297:INFO:Checking exceptions
2025-06-11 21:01:26,297:INFO:Preloading libraries
2025-06-11 21:01:26,297:INFO:Set up data.
2025-06-11 21:01:26,297:INFO:Set up index.
2025-06-11 22:51:59,948:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 22:51:59,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 22:51:59,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 22:51:59,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 22:52:02,189:INFO:Initializing load_model()
2025-06-11 22:52:02,190:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-11 22:57:57,401:INFO:Initializing predict_model()
2025-06-11 22:57:57,401:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C4E94E6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C49BD5B20>)
2025-06-11 22:57:57,401:INFO:Checking exceptions
2025-06-11 22:57:57,401:INFO:Preloading libraries
2025-06-11 22:57:57,401:INFO:Set up data.
2025-06-11 22:57:57,410:INFO:Set up index.
2025-06-11 22:58:12,651:INFO:Initializing predict_model()
2025-06-11 22:58:12,651:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C51AC2B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C4E9B0360>)
2025-06-11 22:58:12,651:INFO:Checking exceptions
2025-06-11 22:58:12,651:INFO:Preloading libraries
2025-06-11 22:58:12,667:INFO:Set up data.
2025-06-11 22:58:12,670:INFO:Set up index.
2025-06-11 23:03:44,920:INFO:Initializing predict_model()
2025-06-11 23:03:44,920:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C5100E690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C4E9B27A0>)
2025-06-11 23:03:44,920:INFO:Checking exceptions
2025-06-11 23:03:44,920:INFO:Preloading libraries
2025-06-11 23:03:44,920:INFO:Set up data.
2025-06-11 23:03:44,920:INFO:Set up index.
2025-06-11 23:08:38,503:INFO:Initializing predict_model()
2025-06-11 23:08:38,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C4E99BA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C4E9B09A0>)
2025-06-11 23:08:38,503:INFO:Checking exceptions
2025-06-11 23:08:38,503:INFO:Preloading libraries
2025-06-11 23:08:38,503:INFO:Set up data.
2025-06-11 23:08:38,503:INFO:Set up index.
2025-06-11 23:08:49,902:INFO:Initializing predict_model()
2025-06-11 23:08:49,902:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C45B7A850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C4C439120>)
2025-06-11 23:08:49,903:INFO:Checking exceptions
2025-06-11 23:08:49,904:INFO:Preloading libraries
2025-06-11 23:08:49,904:INFO:Set up data.
2025-06-11 23:08:49,906:INFO:Set up index.
2025-06-11 23:16:43,642:INFO:Initializing predict_model()
2025-06-11 23:16:43,642:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C4CC3E690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C4E182CA0>)
2025-06-11 23:16:43,642:INFO:Checking exceptions
2025-06-11 23:16:43,642:INFO:Preloading libraries
2025-06-11 23:16:43,643:INFO:Set up data.
2025-06-11 23:16:43,645:INFO:Set up index.
2025-06-11 23:25:59,564:INFO:Initializing predict_model()
2025-06-11 23:25:59,564:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C4E94E690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C4E913060>)
2025-06-11 23:25:59,564:INFO:Checking exceptions
2025-06-11 23:25:59,564:INFO:Preloading libraries
2025-06-11 23:25:59,564:INFO:Set up data.
2025-06-11 23:25:59,564:INFO:Set up index.
2025-06-12 00:02:17,021:INFO:Initializing predict_model()
2025-06-12 00:02:17,021:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C4C4A0650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C51CF9E40>)
2025-06-12 00:02:17,035:INFO:Checking exceptions
2025-06-12 00:02:17,035:INFO:Preloading libraries
2025-06-12 00:02:17,038:INFO:Set up data.
2025-06-12 00:02:17,045:INFO:Set up index.
2025-06-12 00:02:34,231:INFO:Initializing predict_model()
2025-06-12 00:02:34,231:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C50FEE250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C4E9B1F80>)
2025-06-12 00:02:34,231:INFO:Checking exceptions
2025-06-12 00:02:34,231:INFO:Preloading libraries
2025-06-12 00:02:34,231:INFO:Set up data.
2025-06-12 00:02:34,246:INFO:Set up index.
2025-06-12 00:03:04,854:INFO:Initializing predict_model()
2025-06-12 00:03:04,854:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023C4CC47090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023C4E662AC0>)
2025-06-12 00:03:04,854:INFO:Checking exceptions
2025-06-12 00:03:04,854:INFO:Preloading libraries
2025-06-12 00:03:04,854:INFO:Set up data.
2025-06-12 00:03:04,854:INFO:Set up index.
2025-06-12 00:17:56,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 00:17:56,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 00:17:56,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 00:17:56,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 00:17:58,514:INFO:Initializing load_model()
2025-06-12 00:17:58,514:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-12 00:18:24,356:INFO:Initializing predict_model()
2025-06-12 00:18:24,356:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6DF7FF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FD24680>)
2025-06-12 00:18:24,356:INFO:Checking exceptions
2025-06-12 00:18:24,356:INFO:Preloading libraries
2025-06-12 00:18:24,356:INFO:Set up data.
2025-06-12 00:18:24,356:INFO:Set up index.
2025-06-12 00:21:15,565:INFO:Initializing predict_model()
2025-06-12 00:21:15,565:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6DF7DB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FC6A8E0>)
2025-06-12 00:21:15,565:INFO:Checking exceptions
2025-06-12 00:21:15,565:INFO:Preloading libraries
2025-06-12 00:21:15,565:INFO:Set up data.
2025-06-12 00:21:15,581:INFO:Set up index.
2025-06-12 00:21:37,957:INFO:Initializing predict_model()
2025-06-12 00:21:37,957:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A7234D490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FC6BC40>)
2025-06-12 00:21:37,957:INFO:Checking exceptions
2025-06-12 00:21:37,957:INFO:Preloading libraries
2025-06-12 00:21:37,957:INFO:Set up data.
2025-06-12 00:21:37,957:INFO:Set up index.
2025-06-12 00:22:19,043:INFO:Initializing predict_model()
2025-06-12 00:22:19,043:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6FD2C610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FCB6A20>)
2025-06-12 00:22:19,043:INFO:Checking exceptions
2025-06-12 00:22:19,043:INFO:Preloading libraries
2025-06-12 00:22:19,043:INFO:Set up data.
2025-06-12 00:22:19,059:INFO:Set up index.
2025-06-12 00:30:34,906:INFO:Initializing predict_model()
2025-06-12 00:30:34,906:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A72DE9AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FCB60C0>)
2025-06-12 00:30:34,906:INFO:Checking exceptions
2025-06-12 00:30:34,906:INFO:Preloading libraries
2025-06-12 00:30:34,906:INFO:Set up data.
2025-06-12 00:30:34,906:INFO:Set up index.
2025-06-12 00:39:13,180:INFO:Initializing predict_model()
2025-06-12 00:39:13,180:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6D7BADD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6F95B7E0>)
2025-06-12 00:39:13,195:INFO:Checking exceptions
2025-06-12 00:39:13,195:INFO:Preloading libraries
2025-06-12 00:39:13,195:INFO:Set up data.
2025-06-12 00:39:13,196:INFO:Set up index.
2025-06-12 00:54:18,787:INFO:Initializing predict_model()
2025-06-12 00:54:18,787:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A72DEFC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6F8A0D60>)
2025-06-12 00:54:18,787:INFO:Checking exceptions
2025-06-12 00:54:18,787:INFO:Preloading libraries
2025-06-12 00:54:18,787:INFO:Set up data.
2025-06-12 00:54:18,787:INFO:Set up index.
2025-06-12 00:57:06,828:INFO:Initializing predict_model()
2025-06-12 00:57:06,828:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6D7B3390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FC69800>)
2025-06-12 00:57:06,828:INFO:Checking exceptions
2025-06-12 00:57:06,828:INFO:Preloading libraries
2025-06-12 00:57:06,839:INFO:Set up data.
2025-06-12 00:57:06,841:INFO:Set up index.
2025-06-12 01:03:25,715:INFO:Initializing predict_model()
2025-06-12 01:03:25,715:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6FCCA290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FCB44A0>)
2025-06-12 01:03:25,715:INFO:Checking exceptions
2025-06-12 01:03:25,715:INFO:Preloading libraries
2025-06-12 01:03:25,715:INFO:Set up data.
2025-06-12 01:03:25,715:INFO:Set up index.
2025-06-12 01:04:01,504:INFO:Initializing predict_model()
2025-06-12 01:04:01,504:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6D6CA110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FC6A840>)
2025-06-12 01:04:01,504:INFO:Checking exceptions
2025-06-12 01:04:01,504:INFO:Preloading libraries
2025-06-12 01:04:01,504:INFO:Set up data.
2025-06-12 01:04:01,520:INFO:Set up index.
2025-06-12 01:11:00,844:INFO:Initializing predict_model()
2025-06-12 01:11:00,844:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A72383C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A7233E2A0>)
2025-06-12 01:11:00,844:INFO:Checking exceptions
2025-06-12 01:11:00,844:INFO:Preloading libraries
2025-06-12 01:11:00,844:INFO:Set up data.
2025-06-12 01:11:00,844:INFO:Set up index.
2025-06-12 01:50:10,702:INFO:Initializing predict_model()
2025-06-12 01:50:10,702:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6DF7F910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FCB74C0>)
2025-06-12 01:50:10,702:INFO:Checking exceptions
2025-06-12 01:50:10,702:INFO:Preloading libraries
2025-06-12 01:50:10,705:INFO:Set up data.
2025-06-12 01:50:10,708:INFO:Set up index.
2025-06-12 02:08:50,325:INFO:Initializing predict_model()
2025-06-12 02:08:50,341:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A72DEA110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FC6A700>)
2025-06-12 02:08:50,341:INFO:Checking exceptions
2025-06-12 02:08:50,342:INFO:Preloading libraries
2025-06-12 02:08:50,342:INFO:Set up data.
2025-06-12 02:08:50,345:INFO:Set up index.
2025-06-12 02:10:36,388:INFO:Initializing predict_model()
2025-06-12 02:10:36,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6D7C6790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FC6A700>)
2025-06-12 02:10:36,388:INFO:Checking exceptions
2025-06-12 02:10:36,388:INFO:Preloading libraries
2025-06-12 02:10:36,388:INFO:Set up data.
2025-06-12 02:10:36,388:INFO:Set up index.
2025-06-12 02:11:40,150:INFO:Initializing predict_model()
2025-06-12 02:11:40,150:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A66EDE6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FC6BC40>)
2025-06-12 02:11:40,150:INFO:Checking exceptions
2025-06-12 02:11:40,150:INFO:Preloading libraries
2025-06-12 02:11:40,150:INFO:Set up data.
2025-06-12 02:11:40,150:INFO:Set up index.
2025-06-12 02:12:04,990:INFO:Initializing predict_model()
2025-06-12 02:12:04,990:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027A6D7C6CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027A6FC6A5C0>)
2025-06-12 02:12:04,990:INFO:Checking exceptions
2025-06-12 02:12:04,990:INFO:Preloading libraries
2025-06-12 02:12:04,990:INFO:Set up data.
2025-06-12 02:12:04,990:INFO:Set up index.
2025-06-12 03:05:21,220:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:05:21,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:05:21,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:05:21,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:05:28,495:INFO:Initializing load_model()
2025-06-12 03:05:28,495:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-12 03:05:28,562:WARNING:C:\Users\Mateusz\miniconda3\envs\appka_biegacza\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.3.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '8.1.5', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.13.0', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
  warnings.warn(

2025-06-12 03:06:07,532:INFO:Initializing predict_model()
2025-06-12 03:06:07,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018A06583410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018A0654BBA0>)
2025-06-12 03:06:07,532:INFO:Checking exceptions
2025-06-12 03:06:07,532:INFO:Preloading libraries
2025-06-12 03:06:07,532:INFO:Set up data.
2025-06-12 03:06:07,532:INFO:Set up index.
2025-06-12 03:06:44,403:INFO:Initializing predict_model()
2025-06-12 03:06:44,403:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018A066C0490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018A066DB6A0>)
2025-06-12 03:06:44,403:INFO:Checking exceptions
2025-06-12 03:06:44,403:INFO:Preloading libraries
2025-06-12 03:06:44,403:INFO:Set up data.
2025-06-12 03:06:44,403:INFO:Set up index.
2025-06-12 03:10:12,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:10:12,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:10:12,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:10:12,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:10:15,038:INFO:Initializing load_model()
2025-06-12 03:10:15,038:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-12 03:10:15,087:WARNING:C:\Users\Mateusz\miniconda3\envs\appka_biegacza\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.3.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '8.1.5', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.13.0', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
  warnings.warn(

2025-06-12 03:10:35,829:INFO:Initializing predict_model()
2025-06-12 03:10:35,829:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE93FC2A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=33))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FE94089DA0>)
2025-06-12 03:10:35,829:INFO:Checking exceptions
2025-06-12 03:10:35,829:INFO:Preloading libraries
2025-06-12 03:10:35,829:INFO:Set up data.
2025-06-12 03:10:35,837:INFO:Set up index.
2025-06-12 03:29:50,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:29:50,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:29:50,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:29:50,229:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-12 03:29:52,795:INFO:Initializing load_model()
2025-06-12 03:29:52,795:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-12 03:29:52,855:WARNING:C:\Users\Mateusz\miniconda3\envs\appka_biegacza\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.3.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.27.0', 'ipywidgets': '8.1.5', 'tqdm': '4.66.6', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '2.0.2', 'imblearn': '0.13.0', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.10', 'machine': 'AMD64'}}
  warnings.warn(

